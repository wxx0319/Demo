<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.3 r1808647">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="综合接入测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath">D:\apache-jmeter-2.13\bin\ApacheJMeter.jar</stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="电脑票接入（无BASE64）（使用JAVA请求）" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1502437708000</longProp>
        <longProp name="ThreadGroup.end_time">1502441308000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">2000</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="安徽" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipAndPort" elementType="Argument">
                <stringProp name="Argument.name">ipAndPort</stringProp>
                <stringProp name="Argument.value">10.10.34.146:8188</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="DES3" elementType="Argument">
                <stringProp name="Argument.name">DES3</stringProp>
                <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="agentSecretKey" elementType="Argument">
                <stringProp name="Argument.name">agentSecretKey</stringProp>
                <stringProp name="Argument.value">0FD2672D2A5A5C4DA5200003</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">1287F8EB92797EBD25152C0D,0FD2672D2A5A5C4DA5200003,</stringProp>
              </elementProp>
              <elementProp name="PartnerId" elementType="Argument">
                <stringProp name="Argument.name">PartnerId</stringProp>
                <stringProp name="Argument.value">00003</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">00001,00003</stringProp>
              </elementProp>
              <elementProp name="Sign" elementType="Argument">
                <stringProp name="Argument.name">Sign</stringProp>
                <stringProp name="Argument.value">SIKnEgpRix0lXhfXheMqGyZpHqEkojI8V8zTTHfwVl6hklyb2tK99En4ZHlH/hz2UFbV8KR5vrA+pd6XTi5Ujd2ilkbjgSRATCvUg3WcNoQaAsyXYnsFVqbljBV0EAmgRSHGGp3yZBew8t/lM2Hf92VjjvoKpIURdbCICctVK8I=</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TimeStamp" elementType="Argument">
                <stringProp name="Argument.name">TimeStamp</stringProp>
                <stringProp name="Argument.value">2016-10-24 15:10:10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SerialNum" elementType="Argument">
                <stringProp name="Argument.name">SerialNum</stringProp>
                <stringProp name="Argument.value">1234567</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Version" elementType="Argument">
                <stringProp name="Argument.name">Version</stringProp>
                <stringProp name="Argument.value">1.0.0.0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="GameId" elementType="Argument">
                <stringProp name="Argument.name">GameId</stringProp>
                <stringProp name="Argument.value">K3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TermCode" elementType="Argument">
                <stringProp name="Argument.name">TermCode</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="身份验证" enabled="true">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Sign" elementType="Argument">
                  <stringProp name="Argument.name">Sign</stringProp>
                  <stringProp name="Argument.value">${Sign}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleAuth</stringProp>
          </JavaSampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import net.sf.json.JSONObject;

//获取请求响应内容
String response = prev.getResponseDataAsString();
log.info(&quot;===================response:&quot; + response);
if(!&quot;&quot;.equals(response)){
	JSONObject jo = JSONObject.fromObject(response);
	//获取解密后响应内容的Token值
	if(jo.has(&quot;RespContent&quot;)){
		RespContent = new JSONObject().fromObject(response).getString(&quot;RespContent&quot;);
		Token = new JSONObject().fromObject(RespContent).getString(&quot;Token&quot;);
		vars.put(&quot;Token&quot;,Token);
		log.info(&quot;***************************&quot; + Token);
	}else{
		log.info(&quot;****************响应Token为空****************&quot;);
		vars.put(&quot;Token&quot;,&quot;NULL&quot;);
	}
}else{
	log.info(&quot;****************响应response为空****************&quot;);
}

</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="开奖号码查询（安徽）" enabled="true">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">${Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GameId" elementType="Argument">
                  <stringProp name="Argument.name">GameId</stringProp>
                  <stringProp name="Argument.value">${GameId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TermCode" elementType="Argument">
                  <stringProp name="Argument.name">TermCode</stringProp>
                  <stringProp name="Argument.value">${TermCode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryCode</stringProp>
          </JavaSampler>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="开奖公告查询（安徽）" enabled="true">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">${Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GameId" elementType="Argument">
                  <stringProp name="Argument.name">GameId</stringProp>
                  <stringProp name="Argument.value">${GameId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TermCode" elementType="Argument">
                  <stringProp name="Argument.name">TermCode</stringProp>
                  <stringProp name="Argument.value">${TermCode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryPrizeCode</stringProp>
          </JavaSampler>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="期参数查询" enabled="false">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">${Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GameId" elementType="Argument">
                  <stringProp name="Argument.name">GameId</stringProp>
                  <stringProp name="Argument.value">B001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryTerm</stringProp>
          </JavaSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-353779213">&quot;BackCode&quot;:&quot;SUCCESS&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="false">
            <collectionProp name="UserParameters.names">
              <stringProp name="2125597901">GameId</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-2050247439">
                <stringProp name="2013871">B001</stringProp>
              </collectionProp>
              <collectionProp name="57017520">
                <stringProp name="2376">K3</stringProp>
              </collectionProp>
              <collectionProp name="-926227708">
                <stringProp name="77123801">QL730</stringProp>
              </collectionProp>
              <collectionProp name="56944006">
                <stringProp name="2159">D3</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="吉林" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipAndPort" elementType="Argument">
                <stringProp name="Argument.name">ipAndPort</stringProp>
                <stringProp name="Argument.value">10.10.22.142:8189</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="agentSecretKey" elementType="Argument">
                <stringProp name="Argument.name">agentSecretKey</stringProp>
                <stringProp name="Argument.value">0FD2672D2A5A5C4DA5200003</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">1287F8EB92797EBD25152C0D,0FD2672D2A5A5C4DA5200003</stringProp>
              </elementProp>
              <elementProp name="DES3" elementType="Argument">
                <stringProp name="Argument.name">DES3</stringProp>
                <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Sign" elementType="Argument">
                <stringProp name="Argument.name">Sign</stringProp>
                <stringProp name="Argument.value">SIKnEgpRix0lXhfXheMqGyZpHqEkojI8V8zTTHfwVl6hklyb2tK99En4ZHlH/hz2UFbV8KR5vrA+pd6XTi5Ujd2ilkbjgSRATCvUg3WcNoQaAsyXYnsFVqbljBV0EAmgRSHGGp3yZBew8t/lM2Hf92VjjvoKpIURdbCICctVK8I=</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PartnerId" elementType="Argument">
                <stringProp name="Argument.name">PartnerId</stringProp>
                <stringProp name="Argument.value">00003</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">00001,00003</stringProp>
              </elementProp>
              <elementProp name="TimeStamp" elementType="Argument">
                <stringProp name="Argument.name">TimeStamp</stringProp>
                <stringProp name="Argument.value">2016-10-24 15:10:10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SerialNum" elementType="Argument">
                <stringProp name="Argument.name">SerialNum</stringProp>
                <stringProp name="Argument.value">1234567</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Version" elementType="Argument">
                <stringProp name="Argument.name">Version</stringProp>
                <stringProp name="Argument.value">1.0.0.0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TicketCode" elementType="Argument">
                <stringProp name="Argument.name">TicketCode</stringProp>
                <stringProp name="Argument.value">57FD58FA5D128DE873FD</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="GameId" elementType="Argument">
                <stringProp name="Argument.name">GameId</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TermCode" elementType="Argument">
                <stringProp name="Argument.name">TermCode</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="身份验证" enabled="true">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Sign" elementType="Argument">
                  <stringProp name="Argument.name">Sign</stringProp>
                  <stringProp name="Argument.value">${Sign}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleAuth</stringProp>
          </JavaSampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import net.sf.json.JSONObject;

//获取请求响应内容
String response = prev.getResponseDataAsString();
log.info(&quot;===================response:&quot; + response);
if(!&quot;&quot;.equals(response)){
	JSONObject jo = JSONObject.fromObject(response);
	//获取解密后响应内容的Token值
	if(jo.has(&quot;RespContent&quot;)){
		RespContent = new JSONObject().fromObject(response).getString(&quot;RespContent&quot;);
		Token = new JSONObject().fromObject(RespContent).getString(&quot;Token&quot;);
		vars.put(&quot;Token&quot;,Token);
		log.info(&quot;***************************&quot; + Token);
	}else{
		log.info(&quot;****************响应Token为空****************&quot;);
		vars.put(&quot;Token&quot;,&quot;NULL&quot;);
	}
}else{
	log.info(&quot;****************响应response为空****************&quot;);
}

</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="3.1使用票号查询彩票信息" enabled="true">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">${Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TicketCode" elementType="Argument">
                  <stringProp name="Argument.name">TicketCode</stringProp>
                  <stringProp name="Argument.value">${TicketCode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryTicketEx</stringProp>
          </JavaSampler>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="3.2开奖公告查询" enabled="true">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">${Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GameId" elementType="Argument">
                  <stringProp name="Argument.name">GameId</stringProp>
                  <stringProp name="Argument.value">${GameId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TermCode" elementType="Argument">
                  <stringProp name="Argument.name">TermCode</stringProp>
                  <stringProp name="Argument.value">${TermCode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryPrize</stringProp>
          </JavaSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1608611212">&quot;TermCode&quot;:&quot;0207031&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="3.3期参数查询" enabled="true">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">${Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GameId" elementType="Argument">
                  <stringProp name="Argument.name">GameId</stringProp>
                  <stringProp name="Argument.value">${GameId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryTerm</stringProp>
          </JavaSampler>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="false">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="青海（无BASE64）" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipAndPort" elementType="Argument">
                <stringProp name="Argument.name">ipAndPort</stringProp>
                <stringProp name="Argument.value">10.10.63.142:8189</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="agentSecretKey" elementType="Argument">
                <stringProp name="Argument.name">agentSecretKey</stringProp>
                <stringProp name="Argument.value">0FD2672D2A5A5C4DA5200003</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="DES3" elementType="Argument">
                <stringProp name="Argument.name">DES3</stringProp>
                <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PartnerId" elementType="Argument">
                <stringProp name="Argument.name">PartnerId</stringProp>
                <stringProp name="Argument.value">00003</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TimeStamp" elementType="Argument">
                <stringProp name="Argument.name">TimeStamp</stringProp>
                <stringProp name="Argument.value">2016-10-24 15:10:10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SerialNum" elementType="Argument">
                <stringProp name="Argument.name">SerialNum</stringProp>
                <stringProp name="Argument.value">1234567</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Version" elementType="Argument">
                <stringProp name="Argument.name">Version</stringProp>
                <stringProp name="Argument.value">1.0.0.0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Sign" elementType="Argument">
                <stringProp name="Argument.name">Sign</stringProp>
                <stringProp name="Argument.value">SIKnEgpRix0lXhfXheMqGyZpHqEkojI8V8zTTHfwVl6hklyb2tK99En4ZHlH/hz2UFbV8KR5vrA+pd6XTi5Ujd2ilkbjgSRATCvUg3WcNoQaAsyXYnsFVqbljBV0EAmgRSHGGp3yZBew8t/lM2Hf92VjjvoKpIURdbCICctVK8I=</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="身份验证" enabled="false">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Sign" elementType="Argument">
                  <stringProp name="Argument.name">Sign</stringProp>
                  <stringProp name="Argument.value">${Sign}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleAuth</stringProp>
          </JavaSampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import net.sf.json.JSONObject;

//获取请求响应内容
String response = prev.getResponseDataAsString();
log.info(&quot;===================response:&quot; + response);
if(!&quot;&quot;.equals(response)){
	JSONObject jo = JSONObject.fromObject(response);
	//获取解密后响应内容的Token值
	if(jo.has(&quot;RespContent&quot;)){
		RespContent = new JSONObject().fromObject(response).getString(&quot;RespContent&quot;);
		Token = new JSONObject().fromObject(RespContent).getString(&quot;Token&quot;);
		vars.put(&quot;Token&quot;,Token);
		log.info(&quot;***************************&quot; + Token);
	}else{
		log.info(&quot;****************响应Token为空****************&quot;);
		vars.put(&quot;Token&quot;,&quot;NULL&quot;);
	}
}else{
	log.info(&quot;****************响应response为空****************&quot;);
}

</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="3.1使用票号查询彩票信息" enabled="false">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">${Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TicketCode" elementType="Argument">
                  <stringProp name="Argument.name">TicketCode</stringProp>
                  <stringProp name="Argument.value">645E661700B18C0F4725</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryTicketEx</stringProp>
          </JavaSampler>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="3.2开奖公告查询" enabled="false">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">${Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GameId" elementType="Argument">
                  <stringProp name="Argument.name">GameId</stringProp>
                  <stringProp name="Argument.value">S3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TermCode" elementType="Argument">
                  <stringProp name="Argument.name">TermCode</stringProp>
                  <stringProp name="Argument.value">2017006</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryPrize</stringProp>
          </JavaSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1608611212">&quot;TermCode&quot;:&quot;0207031&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="3.3期参数查询" enabled="false">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">${Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GameId" elementType="Argument">
                  <stringProp name="Argument.name">GameId</stringProp>
                  <stringProp name="Argument.value">K3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryTerm</stringProp>
          </JavaSampler>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="湖南" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="第三方商家" enabled="true"/>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">10.10.43.149:8181</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.desc">AccessMark的启动IP和PORT</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">0FD2672D2A5A5C4DA5200004</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.desc">1287F8EB92797EBD25152C0D,0FD2672D2A5A5C4DA5200003,</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">00004</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.desc">00001,00003</stringProp>
                </elementProp>
                <elementProp name="Sign" elementType="Argument">
                  <stringProp name="Argument.name">Sign</stringProp>
                  <stringProp name="Argument.value">38zfcELlpoemrQRoo0C4kDFGldJ6/KG1aXYrnODqGDCaYO8tgD181+iR7O7CTYGlPyyXjlc5uwwk9gZ/mvngeYiTDzTmNGN5AsddiX4fs+kXoWUM5BEst++cF6yYRmdCVqCyqnCNs2oa2F1n7HqPnHWqi/xZNsfdEwRF6ShL5II=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">2016-10-24 15:10:10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">1234567</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">1.0.0.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GameId" elementType="Argument">
                  <stringProp name="Argument.name">GameId</stringProp>
                  <stringProp name="Argument.value">K520</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TermCode" elementType="Argument">
                  <stringProp name="Argument.name">TermCode</stringProp>
                  <stringProp name="Argument.value">1029005</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">asd123</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="身份验证" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ipAndPort" elementType="Argument">
                    <stringProp name="Argument.name">ipAndPort</stringProp>
                    <stringProp name="Argument.value">${ipAndPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="agentSecretKey" elementType="Argument">
                    <stringProp name="Argument.name">agentSecretKey</stringProp>
                    <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="DES3" elementType="Argument">
                    <stringProp name="Argument.name">DES3</stringProp>
                    <stringProp name="Argument.value">${DES3}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="PartnerId" elementType="Argument">
                    <stringProp name="Argument.name">PartnerId</stringProp>
                    <stringProp name="Argument.value">${PartnerId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="TimeStamp" elementType="Argument">
                    <stringProp name="Argument.name">TimeStamp</stringProp>
                    <stringProp name="Argument.value">${TimeStamp}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="SerialNum" elementType="Argument">
                    <stringProp name="Argument.name">SerialNum</stringProp>
                    <stringProp name="Argument.value">${SerialNum}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Version" elementType="Argument">
                    <stringProp name="Argument.name">Version</stringProp>
                    <stringProp name="Argument.value">${Version}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Sign" elementType="Argument">
                    <stringProp name="Argument.name">Sign</stringProp>
                    <stringProp name="Argument.value">${Sign}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleAuth</stringProp>
            </JavaSampler>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="false">
                <collectionProp name="UserParameters.names">
                  <stringProp name="208335843">PartnerId</stringProp>
                  <stringProp name="-1950315510">agentSecretKey</stringProp>
                  <stringProp name="2576861">Sign</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-1491694818">
                    <stringProp name="45806643">00003</stringProp>
                    <stringProp name="110931621">0FD2672D2A5A5C4DA5200003</stringProp>
                    <stringProp name="-429491537">SIKnEgpRix0lXhfXheMqGyZpHqEkojI8V8zTTHfwVl6hklyb2tK99En4ZHlH/hz2UFbV8KR5vrA+pd6XTi5Ujd2ilkbjgSRATCvUg3WcNoQaAsyXYnsFVqbljBV0EAmgRSHGGp3yZBew8t/lM2Hf92VjjvoKpIURdbCICctVK8I=</stringProp>
                  </collectionProp>
                  <collectionProp name="212723359">
                    <stringProp name="45806644">00004</stringProp>
                    <stringProp name="110931622">0FD2672D2A5A5C4DA5200004</stringProp>
                    <stringProp name="1404070582">38zfcELlpoemrQRoo0C4kDFGldJ6/KG1aXYrnODqGDCaYO8tgD181+iR7O7CTYGlPyyXjlc5uwwk9gZ/mvngeYiTDzTmNGN5AsddiX4fs+kXoWUM5BEst++cF6yYRmdCVqCyqnCNs2oa2F1n7HqPnHWqi/xZNsfdEwRF6ShL5II=</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import net.sf.json.JSONObject;

//获取请求响应内容
String response = prev.getResponseDataAsString();
log.info(&quot;===================response:&quot; + response);
if(!&quot;&quot;.equals(response)){
	JSONObject jo = JSONObject.fromObject(response);
	//获取解密后响应内容的Token值
	if(jo.has(&quot;RespContent&quot;)){
		RespContent = new JSONObject().fromObject(response).getString(&quot;RespContent&quot;);
		Token = new JSONObject().fromObject(RespContent).getString(&quot;Token&quot;);
		vars.put(&quot;Token&quot;,Token);
		log.info(&quot;***************************&quot; + Token);
	}else{
		log.info(&quot;****************响应Token为空****************&quot;);
		vars.put(&quot;Token&quot;,&quot;NULL&quot;);
	}
}else{
	log.info(&quot;****************响应response为空****************&quot;);
}

</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1971526210">&quot;200000&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="彩票查询" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ipAndPort" elementType="Argument">
                    <stringProp name="Argument.name">ipAndPort</stringProp>
                    <stringProp name="Argument.value">${ipAndPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="agentSecretKey" elementType="Argument">
                    <stringProp name="Argument.name">agentSecretKey</stringProp>
                    <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="DES3" elementType="Argument">
                    <stringProp name="Argument.name">DES3</stringProp>
                    <stringProp name="Argument.value">${DES3}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="PartnerId" elementType="Argument">
                    <stringProp name="Argument.name">PartnerId</stringProp>
                    <stringProp name="Argument.value">${PartnerId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="TimeStamp" elementType="Argument">
                    <stringProp name="Argument.name">TimeStamp</stringProp>
                    <stringProp name="Argument.value">${TimeStamp}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="SerialNum" elementType="Argument">
                    <stringProp name="Argument.name">SerialNum</stringProp>
                    <stringProp name="Argument.value">${SerialNum}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Version" elementType="Argument">
                    <stringProp name="Argument.name">Version</stringProp>
                    <stringProp name="Argument.value">${Version}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Sign" elementType="Argument">
                    <stringProp name="Argument.name">Sign</stringProp>
                    <stringProp name="Argument.value">SIKnEgpRix0lXhfXheMqGyZpHqEkojI8V8zTTHfwVl6hklyb2tK99En4ZHlH/hz2UFbV8KR5vrA+pd6XTi5Ujd2ilkbjgSRATCvUg3WcNoQaAsyXYnsFVqbljBV0EAmgRSHGGp3yZBew8t/lM2Hf92VjjvoKpIURdbCICctVK8I=</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleAuth</stringProp>
            </JavaSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1971526241">&quot;200001&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="福彩助手（内部商家）" enabled="false"/>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">10.10.43.149:8188</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.desc">IntegrateAccess的启动IP和PORT</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">1287F8EB92797EBD25152C0D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.desc">1287F8EB92797EBD25152C0D,0FD2672D2A5A5C4DA5200003,</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">00001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <stringProp name="Argument.desc">00001,00003</stringProp>
                </elementProp>
                <elementProp name="Sign" elementType="Argument">
                  <stringProp name="Argument.name">Sign</stringProp>
                  <stringProp name="Argument.value">SIKnEgpRix0lXhfXheMqGyZpHqEkojI8V8zTTHfwVl6hklyb2tK99En4ZHlH/hz2UFbV8KR5vrA+pd6XTi5Ujd2ilkbjgSRATCvUg3WcNoQaAsyXYnsFVqbljBV0EAmgRSHGGp3yZBew8t/lM2Hf92VjjvoKpIURdbCICctVK8I=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">2016-10-24 15:10:10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">1234567</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">1.0.0.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">asd123</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GameId" elementType="Argument">
                  <stringProp name="Argument.name">GameId</stringProp>
                  <stringProp name="Argument.value">S3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TermCode" elementType="Argument">
                  <stringProp name="Argument.name">TermCode</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="false">
              <collectionProp name="UserParameters.names">
                <stringProp name="2125597901">GameId</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-2050247439">
                  <stringProp name="2013871">B001</stringProp>
                </collectionProp>
                <collectionProp name="57017520">
                  <stringProp name="2376">K3</stringProp>
                </collectionProp>
                <collectionProp name="-926227708">
                  <stringProp name="77123801">QL730</stringProp>
                </collectionProp>
                <collectionProp name="56944006">
                  <stringProp name="2159">D3</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="使用票号查询彩票信息" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ipAndPort" elementType="Argument">
                    <stringProp name="Argument.name">ipAndPort</stringProp>
                    <stringProp name="Argument.value">${ipAndPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="agentSecretKey" elementType="Argument">
                    <stringProp name="Argument.name">agentSecretKey</stringProp>
                    <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="DES3" elementType="Argument">
                    <stringProp name="Argument.name">DES3</stringProp>
                    <stringProp name="Argument.value">${DES3}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="PartnerId" elementType="Argument">
                    <stringProp name="Argument.name">PartnerId</stringProp>
                    <stringProp name="Argument.value">${PartnerId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="TimeStamp" elementType="Argument">
                    <stringProp name="Argument.name">TimeStamp</stringProp>
                    <stringProp name="Argument.value">${TimeStamp}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="SerialNum" elementType="Argument">
                    <stringProp name="Argument.name">SerialNum</stringProp>
                    <stringProp name="Argument.value">${SerialNum}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Version" elementType="Argument">
                    <stringProp name="Argument.name">Version</stringProp>
                    <stringProp name="Argument.value">${Version}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Token" elementType="Argument">
                    <stringProp name="Argument.name">Token</stringProp>
                    <stringProp name="Argument.value">${Token}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="TicketCode" elementType="Argument">
                    <stringProp name="Argument.name">TicketCode</stringProp>
                    <stringProp name="Argument.value">A38C3E3388A55F00701C</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryTicketEx</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="开奖公告查询" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ipAndPort" elementType="Argument">
                    <stringProp name="Argument.name">ipAndPort</stringProp>
                    <stringProp name="Argument.value">${ipAndPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="agentSecretKey" elementType="Argument">
                    <stringProp name="Argument.name">agentSecretKey</stringProp>
                    <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="DES3" elementType="Argument">
                    <stringProp name="Argument.name">DES3</stringProp>
                    <stringProp name="Argument.value">${DES3}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="PartnerId" elementType="Argument">
                    <stringProp name="Argument.name">PartnerId</stringProp>
                    <stringProp name="Argument.value">${PartnerId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="TimeStamp" elementType="Argument">
                    <stringProp name="Argument.name">TimeStamp</stringProp>
                    <stringProp name="Argument.value">${TimeStamp}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="SerialNum" elementType="Argument">
                    <stringProp name="Argument.name">SerialNum</stringProp>
                    <stringProp name="Argument.value">${SerialNum}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Version" elementType="Argument">
                    <stringProp name="Argument.name">Version</stringProp>
                    <stringProp name="Argument.value">${Version}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Token" elementType="Argument">
                    <stringProp name="Argument.name">Token</stringProp>
                    <stringProp name="Argument.value">${Token}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="GameId" elementType="Argument">
                    <stringProp name="Argument.name">GameId</stringProp>
                    <stringProp name="Argument.value">${GameId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="TermCode" elementType="Argument">
                    <stringProp name="Argument.name">TermCode</stringProp>
                    <stringProp name="Argument.value">${TermCode}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryPrize</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="期参数查询" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ipAndPort" elementType="Argument">
                    <stringProp name="Argument.name">ipAndPort</stringProp>
                    <stringProp name="Argument.value">${ipAndPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="agentSecretKey" elementType="Argument">
                    <stringProp name="Argument.name">agentSecretKey</stringProp>
                    <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="DES3" elementType="Argument">
                    <stringProp name="Argument.name">DES3</stringProp>
                    <stringProp name="Argument.value">${DES3}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="PartnerId" elementType="Argument">
                    <stringProp name="Argument.name">PartnerId</stringProp>
                    <stringProp name="Argument.value">${PartnerId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="TimeStamp" elementType="Argument">
                    <stringProp name="Argument.name">TimeStamp</stringProp>
                    <stringProp name="Argument.value">${TimeStamp}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="SerialNum" elementType="Argument">
                    <stringProp name="Argument.name">SerialNum</stringProp>
                    <stringProp name="Argument.value">${SerialNum}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Version" elementType="Argument">
                    <stringProp name="Argument.name">Version</stringProp>
                    <stringProp name="Argument.value">${Version}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Token" elementType="Argument">
                    <stringProp name="Argument.name">Token</stringProp>
                    <stringProp name="Argument.value">${Token}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="GameId" elementType="Argument">
                    <stringProp name="Argument.name">GameId</stringProp>
                    <stringProp name="Argument.value">${GameId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryTerm</stringProp>
            </JavaSampler>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-353779213">&quot;BackCode&quot;:&quot;SUCCESS&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="江西（有BASE64）" enabled="false"/>
        <hashTree>
          <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${BodyData}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">10.10.36.142</stringProp>
            <stringProp name="HTTPSampler.port">8188</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </ConfigTestElement>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="agentSecretKey" elementType="Argument">
                <stringProp name="Argument.name">agentSecretKey</stringProp>
                <stringProp name="Argument.value">&quot;0FD2672D2A5A5C4DA5200003&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="DES3" elementType="Argument">
                <stringProp name="Argument.name">DES3</stringProp>
                <stringProp name="Argument.value">&quot;zhongxinyinhang123456789&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PartnerId" elementType="Argument">
                <stringProp name="Argument.name">PartnerId</stringProp>
                <stringProp name="Argument.value">00003</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Version" elementType="Argument">
                <stringProp name="Argument.name">Version</stringProp>
                <stringProp name="Argument.value">&quot;1.0.0.0&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="appSecretKey" elementType="Argument">
                <stringProp name="Argument.name">appSecretKey</stringProp>
                <stringProp name="Argument.value">&quot;F734B7E634E78EBB9A467B0E&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">回调通知APP请求接口时，需要用此密钥先进行加密</stringProp>
              </elementProp>
              <elementProp name="appDecodeKey" elementType="Argument">
                <stringProp name="Argument.name">appDecodeKey</stringProp>
                <stringProp name="Argument.value">&quot;F734B7E634E78EBB9A467B0E&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">回调通知APP后，APP返回的内容需要用此密钥进行解密</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-212466887">TicketCode</stringProp>
              <stringProp name="-794966476">ImageUrl</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-40717579">
                <stringProp name="2067025430">&quot;A92898A0441C75D2DBAC&quot;</stringProp>
                <stringProp name="1154326782">&quot;http://10.10.36.142:8080/picture/B001-2019006-11.jpg&quot;</stringProp>
              </collectionProp>
              <collectionProp name="-105030414">
                <stringProp name="-1171833340">&quot;25E157E31157FDD8E185&quot;</stringProp>
                <stringProp name="-257305170">&quot;http://10.10.36.142:8080/picture/SP61-2019002.jpg&quot;</stringProp>
              </collectionProp>
              <collectionProp name="-1879133797">
                <stringProp name="1558248491">&quot;A307265BE8D82A3465D9&quot;</stringProp>
                <stringProp name="893150482">&quot;http://10.10.36.142:8080/picture/3D-2019005.jpg&quot;</stringProp>
              </collectionProp>
              <collectionProp name="2073874073">
                <stringProp name="1067785630">&quot;B70112343222DFCCE6A9&quot;</stringProp>
                <stringProp name="-1991347334">&quot;http://10.10.36.142:8080/picture/QL515-2019004.jpg&quot;</stringProp>
              </collectionProp>
              <collectionProp name="1043689248">
                <stringProp name="1582336102">&quot;AAF706EE1FD8C0C2FFEC&quot;</stringProp>
                <stringProp name="812811164">&quot;http://10.10.36.142:8080/picture/QL730-2019003-1.jpg&quot;</stringProp>
              </collectionProp>
              <collectionProp name="-1356881792">
                <stringProp name="-193739713">&quot;9A9718139BAF865F4290&quot;</stringProp>
                <stringProp name="1848160515">&quot;http://10.10.36.142:8080/picture/K3-0116052.jpg&quot;</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="身份验证" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/access/do?cmd=auth&amp;partnerId=${PartnerId}&amp;hashType=md5&amp;hash=${hash}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="2576861">Sign</stringProp>
                <stringProp name="1430462674">SerialNum</stringProp>
                <stringProp name="2029541590">TimeStamp</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-1372075903">
                  <stringProp name="-1476425324">&quot;RptYIba1Gy6FzKbk+4Fq7zn+i+LM9SXJhBQkls1stUAOqMOQweBL1W6f2vFuUV+NPi6SslIDyoeq26iQ9jl4cDQqlavH1DuBWrxHZXNIt2fi7ziV41ZQ6PrTFBrwwv/kHJIcjVo4u1GXn4FnQSGiTeaTGCRElI0kU0xbzSrd29s=&quot;</stringProp>
                  <stringProp name="1109704336">&quot;1234567&quot;</stringProp>
                  <stringProp name="1347982759">&quot;2016-10-25 15:10:10&quot;</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.sinodata.forJMeter.MD5Security;
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import com.sinodata.forJMeter.JsonJiaJieMi;



//组装业务参数ReqContent
JSONObject rc = new JSONObject();
rc.put(&quot;Sign&quot;,${Sign});

String reqContent = rc.toString();
log.info(&quot;*******************reqContent:&quot; + reqContent);

//组装BodyData
JSONObject bd = new JSONObject();
bd.put(&quot;PartnerId&quot;,&quot;${PartnerId}&quot;);
bd.put(&quot;TimeStamp&quot;,${TimeStamp});
bd.put(&quot;SerialNum&quot;,${SerialNum});
bd.put(&quot;Version&quot;,${Version});
bd.put(&quot;ReqContent&quot;,reqContent);
log.info(&quot;**************请求加密前，BodyData=&quot; + bd.toString());

//加密BodyData数据
JsonJiaJieMi jjj = new JsonJiaJieMi(${agentSecretKey},${DES3});
String bodyData = jjj.jiaMi(bd.toString());
vars.put(&quot;BodyData&quot;,bodyData);
log.info(&quot;**************请求加密后，BodyData=&quot; + bodyData);

//通过将BodyData进行md5转换，获取hash值
hash = MD5Security.md5(bodyData);
vars.put(&quot;hash&quot;,hash);
log.info(&quot;****************hash值为：&quot; + hash);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import com.sinodata.forJMeter.JsonJiaJieMi;

//获取请求响应内容
String response = prev.getResponseDataAsString();

//对响应内容进行解密
JsonJiaJieMi jjj = new JsonJiaJieMi(${agentSecretKey},${DES3});
String strTmp;
try{
	strTmp = jjj.jieMi(response);	
	}
	catch (Throwable ex){
		log.error(&quot;this is a wrong&quot;, ex);
	}
//打印解密后的响应内容
log.info(&quot;****************响应解密后：&quot; + strTmp);

//获取解密后响应内容的BackCode值
JSONObject jo = JSONObject.fromObject(strTmp);
if(jo.has(&quot;BackCode&quot;)){
	backCode = jo.getString(&quot;BackCode&quot;);
	vars.put(&quot;BackCode&quot;,backCode);
	//如果RespContent值返回不为null，则获取Token返回值并保存到JMeter变量中，以备其它查询接口使用
	if(!&quot;null&quot;.equals(jo.getString(&quot;RespContent&quot;))){
		token = JSONObject.fromObject(jo.getString(&quot;RespContent&quot;)).getString(&quot;Token&quot;);
		vars.put(&quot;Token&quot;,token);
		log.info(&quot;****************Token值为：&quot; + token);
	}else{
		log.info(&quot;****************RespContent为null&quot;);
		log.info(&quot;****************无Token值返回&quot;);
		}
}else{
	log.info(&quot;****************响应BackCode为空****************&quot;);
	}
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">String str = vars.get(&quot;BackCode&quot;);
if(!&quot;SUCCESS&quot;.equals(str)){
	Failure = true;
	FailureMessage = &quot;身份验证失败，BackCode响应值为：&quot; + str;
}
</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="开奖公告查询" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/access/do?cmd=queryPrize&amp;partnerId=${PartnerId}&amp;hashType=md5&amp;hash=${hash}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="2125597901">GameId</stringProp>
                <stringProp name="-1117735783">TermCode</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="746518717">
                  <stringProp name="1094272">&quot;S3&quot;</stringProp>
                  <stringProp name="1088">&quot;&quot;</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="false">
              <collectionProp name="UserParameters.names">
                <stringProp name="2125597901">GameId</stringProp>
                <stringProp name="-1117735783">TermCode</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="909825589">
                  <stringProp name="1035821169">&quot;B001&quot;</stringProp>
                  <stringProp name="1088">&quot;&quot;</stringProp>
                </collectionProp>
                <collectionProp name="746518717">
                  <stringProp name="1094272">&quot;S3&quot;</stringProp>
                  <stringProp name="1088">&quot;&quot;</stringProp>
                </collectionProp>
                <collectionProp name="629115713">
                  <stringProp name="-1793775349">&quot;QL730&quot;</stringProp>
                  <stringProp name="1088">&quot;&quot;</stringProp>
                </collectionProp>
                <collectionProp name="164978587">
                  <stringProp name="1052480104">&quot;SP61&quot;</stringProp>
                  <stringProp name="1088">&quot;&quot;</stringProp>
                </collectionProp>
                <collectionProp name="-799381613">
                  <stringProp name="-1793836698">&quot;QL515&quot;</stringProp>
                  <stringProp name="1088">&quot;&quot;</stringProp>
                </collectionProp>
                <collectionProp name="-241312992">
                  <stringProp name="1086584">&quot;K3&quot;</stringProp>
                  <stringProp name="1088">&quot;&quot;</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.sinodata.forJMeter.MD5Security;
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import com.sinodata.forJMeter.JsonJiaJieMi;

//组装业务参数ReqContent
JSONObject rc = new JSONObject();
rc.put(&quot;GameId&quot;,${GameId});
rc.put(&quot;TermCode&quot;,${TermCode});

String reqContent = rc.toString();
log.info(&quot;*******************reqContent:&quot; + reqContent);

//组装BodyData
JSONObject bd = new JSONObject();
bd.put(&quot;PartnerId&quot;,&quot;${PartnerId}&quot;);
bd.put(&quot;TimeStamp&quot;,&quot;${__time(yyyy-MM-dd HH:mm:ss,timeStamp)}&quot;);
bd.put(&quot;SerialNum&quot;,&quot;${__time(yyyyMMddHHmmss,curtermTime)}&quot;);
bd.put(&quot;Version&quot;,${Version});
bd.put(&quot;Token&quot;,vars.get(&quot;Token&quot;));
//bd.put(&quot;Token&quot;,&quot;Token&quot;);
bd.put(&quot;ReqContent&quot;,reqContent);
log.info(&quot;**************请求加密前，BodyData=&quot; + bd.toString());

//加密BodyData数据
JsonJiaJieMi jjj = new JsonJiaJieMi(${agentSecretKey},${DES3});
String bodyData = jjj.jiaMi(bd.toString());
vars.put(&quot;BodyData&quot;,bodyData);
log.info(&quot;**************请求加密后，BodyData=&quot; + bodyData);

//通过将BodyData进行md5转换，获取hash值
hash = MD5Security.md5(bodyData);
vars.put(&quot;hash&quot;,hash);
log.info(&quot;****************hash值为：&quot; + hash);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import com.sinodata.forJMeter.JsonJiaJieMi;

//获取请求响应内容
String response = prev.getResponseDataAsString();

//对响应内容进行解密
JsonJiaJieMi jjj = new JsonJiaJieMi(${agentSecretKey},${DES3});
String strTmp;
try{
	strTmp = jjj.jieMi(response);	
	}
	catch (Throwable ex){
		log.error(&quot;this is a wrong&quot;, ex);
	}
//打印解密后的响应内容
log.info(&quot;****************响应解密后：&quot; + strTmp);

//获取解密后响应内容的BackCode值
JSONObject jo = JSONObject.fromObject(strTmp);
if(jo.has(&quot;BackCode&quot;)){
	BackCode = new JSONObject().fromObject(strTmp).getString(&quot;BackCode&quot;);
	vars.put(&quot;BackCode&quot;,BackCode);
}else{
	log.info(&quot;****************响应BackCode为空****************&quot;);
	vars.put(&quot;BackCode&quot;,&quot;NULL&quot;);
	}
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">String str = vars.get(&quot;BackCode&quot;);
if(!&quot;SUCCESS&quot;.equals(str)){
	Failure = true;
	FailureMessage = &quot;开奖公告查询失败，BackCode响应值为：&quot; + str;
}
</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新期参数查询" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/access/do?cmd=queryTerm&amp;partnerId=${PartnerId}&amp;hashType=md5&amp;hash=${hash}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="2125597901">GameId</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="1542514435">
                  <stringProp name="-1793775349">&quot;QL730&quot;</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.sinodata.forJMeter.MD5Security;
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import com.sinodata.forJMeter.JsonJiaJieMi;

//组装业务参数ReqContent
JSONObject rc = new JSONObject();
rc.put(&quot;GameId&quot;,${GameId});

String reqContent = rc.toString();
log.info(&quot;*******************reqContent:&quot; + reqContent);

//组装BodyData
JSONObject bd = new JSONObject();
bd.put(&quot;PartnerId&quot;,&quot;${PartnerId}&quot;);
bd.put(&quot;TimeStamp&quot;,&quot;${__time(yyyy-MM-dd HH:mm:ss,timeStamp)}&quot;);
bd.put(&quot;SerialNum&quot;,&quot;${__time(yyyyMMddHHmmss,curtermTime)}&quot;);
bd.put(&quot;Version&quot;,${Version});
bd.put(&quot;Token&quot;,vars.get(&quot;Token&quot;));
//bd.put(&quot;Token&quot;,&quot;Token&quot;);
bd.put(&quot;ReqContent&quot;,reqContent);
log.info(&quot;**************请求加密前，BodyData=&quot; + bd.toString());

//加密BodyData数据
JsonJiaJieMi jjj = new JsonJiaJieMi(${agentSecretKey},${DES3});
String bodyData = jjj.jiaMi(bd.toString());
vars.put(&quot;BodyData&quot;,bodyData);
log.info(&quot;**************请求加密后，BodyData=&quot; + bodyData);

//通过将BodyData进行md5转换，获取hash值
hash = MD5Security.md5(bodyData);
vars.put(&quot;hash&quot;,hash);
log.info(&quot;****************hash值为：&quot; + hash);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import com.sinodata.forJMeter.JsonJiaJieMi;

//获取请求响应内容
String response = prev.getResponseDataAsString();

//对响应内容进行解密
JsonJiaJieMi jjj = new JsonJiaJieMi(${agentSecretKey},${DES3});
String strTmp;
try{
	strTmp = jjj.jieMi(response);	
	}
	catch (Throwable ex){
		log.error(&quot;this is a wrong&quot;, ex);
	}
//打印解密后的响应内容
log.info(&quot;****************响应解密后：&quot; + strTmp);

//获取解密后响应内容的BackCode值
JSONObject jo = JSONObject.fromObject(strTmp);
if(jo.has(&quot;BackCode&quot;)){
	BackCode = new JSONObject().fromObject(strTmp).getString(&quot;BackCode&quot;);
	vars.put(&quot;BackCode&quot;,BackCode);
}else{
	log.info(&quot;****************响应BackCode为空****************&quot;);
	vars.put(&quot;BackCode&quot;,&quot;NULL&quot;);
	}
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">String str = vars.get(&quot;BackCode&quot;);
if(!&quot;SUCCESS&quot;.equals(str)){
	Failure = true;
	FailureMessage = &quot;新期参数查询失败，BackCode响应值为：&quot; + str;
}
</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="使用票号查询彩票信息" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/access/do?cmd=queryTicketEx&amp;partnerId=${PartnerId}&amp;hashType=md5&amp;hash=${hash}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="false">
              <collectionProp name="UserParameters.names">
                <stringProp name="-212466887">TicketCode</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-1974825094">
                  <stringProp name="-1329374842">&quot;AA69D9E0B3E67D096874&quot;</stringProp>
                </collectionProp>
                <collectionProp name="582784597">
                  <stringProp name="1690218173">&quot;DB1338E9D8D9471ED064&quot;</stringProp>
                </collectionProp>
                <collectionProp name="-1536438218">
                  <stringProp name="41890448">&quot;ADF3B7C144A0CE1D5075&quot;</stringProp>
                </collectionProp>
                <collectionProp name="571098066">
                  <stringProp name="1667457531">&quot;6B103203210305B5A04C&quot;</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="false">
              <collectionProp name="UserParameters.names">
                <stringProp name="-212466887">TicketCode</stringProp>
                <stringProp name="0"></stringProp>
                <stringProp name="0"></stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="1618241883">
                  <stringProp name="1657953638">&quot;E231364144E6DE4394AD&quot;</stringProp>
                  <stringProp name="-140974587">站点作废票</stringProp>
                  <stringProp name="173729026">TicketState返回1</stringProp>
                </collectionProp>
                <collectionProp name="-68851648">
                  <stringProp name="745217370">&quot;A36145731619999FEEBD&quot;</stringProp>
                  <stringProp name="2060889178">中心注销票</stringProp>
                  <stringProp name="173729026">TicketState返回1</stringProp>
                </collectionProp>
                <collectionProp name="-1759050273">
                  <stringProp name="-1861517956">&quot;B2521433476D9F0332A5&quot;</stringProp>
                  <stringProp name="1611600035">已过兑奖期票</stringProp>
                  <stringProp name="173729028">TicketState返回3</stringProp>
                </collectionProp>
                <collectionProp name="-1102768213">
                  <stringProp name="1047472665">&quot;B252143375839F0393A5&quot;</stringProp>
                  <stringProp name="-1316115826">未注销的注销凭证</stringProp>
                  <stringProp name="173729027">TicketState返回2</stringProp>
                </collectionProp>
                <collectionProp name="1510072445">
                  <stringProp name="1657954103">&quot;E231364144E6DE4394AS&quot;</stringProp>
                  <stringProp name="1992050113">不存在的票</stringProp>
                  <stringProp name="173729028">TicketState返回3</stringProp>
                </collectionProp>
                <collectionProp name="-1836173092">
                  <stringProp name="-572376373">&quot;03B3A8705A5C83E303E0&quot;</stringProp>
                  <stringProp name="19972543">中奖票</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <collectionProp name="-1629996104">
                  <stringProp name="1713902989">&quot;9FFC68FA4C1353D4D3FD&quot;</stringProp>
                  <stringProp name="2005076840">中多奖等票</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <collectionProp name="-1672185725">
                  <stringProp name="679612156">&quot;a1c7210c7015eb03069d&quot;</stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.sinodata.forJMeter.MD5Security;
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import com.sinodata.forJMeter.JsonJiaJieMi;

//组装业务参数ReqContent
JSONObject rc = new JSONObject();
rc.put(&quot;TicketCode&quot;,${TicketCode});

String reqContent = rc.toString();
log.info(&quot;*******************reqContent:&quot; + reqContent);

//组装BodyData
JSONObject bd = new JSONObject();
bd.put(&quot;PartnerId&quot;,&quot;${PartnerId}&quot;);
bd.put(&quot;TimeStamp&quot;,&quot;${__time(yyyy-MM-dd HH:mm:ss,timeStamp)}&quot;);
bd.put(&quot;SerialNum&quot;,&quot;${__time(yyyyMMddHHmmss,curtermTime)}&quot;);
bd.put(&quot;Version&quot;,${Version});
bd.put(&quot;Token&quot;,vars.get(&quot;Token&quot;));
//bd.put(&quot;Token&quot;,&quot;Token&quot;);
bd.put(&quot;ReqContent&quot;,reqContent);
log.info(&quot;**************请求加密前，BodyData=&quot; + bd.toString());

//加密BodyData数据
JsonJiaJieMi jjj = new JsonJiaJieMi(${agentSecretKey},${DES3});
String bodyData = jjj.jiaMi(bd.toString());
vars.put(&quot;BodyData&quot;,bodyData);
log.info(&quot;**************请求加密后，BodyData=&quot; + bodyData);

//通过将BodyData进行md5转换，获取hash值
hash = MD5Security.md5(bodyData);
vars.put(&quot;hash&quot;,hash);
log.info(&quot;****************hash值为：&quot; + hash);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import com.sinodata.forJMeter.JsonJiaJieMi;

//获取请求响应内容
String response = prev.getResponseDataAsString();

//对响应内容进行解密
JsonJiaJieMi jjj = new JsonJiaJieMi(${agentSecretKey},${DES3});
String strTmp;
try{
	strTmp = jjj.jieMi(response);	
	}
	catch (Throwable ex){
		log.error(&quot;this is a wrong&quot;, ex);
	}
//打印解密后的响应内容
log.info(&quot;****************响应解密后：&quot; + strTmp);

//获取解密后响应内容的BackCode值
JSONObject jo = JSONObject.fromObject(strTmp);
if(jo.has(&quot;BackCode&quot;)){
	BackCode = new JSONObject().fromObject(strTmp).getString(&quot;BackCode&quot;);
	vars.put(&quot;BackCode&quot;,BackCode);
}else{
	log.info(&quot;****************响应BackCode为空****************&quot;);
	vars.put(&quot;BackCode&quot;,&quot;NULL&quot;);
	}
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">String str = vars.get(&quot;BackCode&quot;);
if(!&quot;SUCCESS&quot;.equals(str)){
	Failure = true;
	FailureMessage = &quot;查询彩票信息失败，BackCode响应值为：&quot; + str;
}
</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="开奖公告通知" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">10.10.41.189</stringProp>
            <stringProp name="HTTPSampler.port">1080</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/access/do?cmd=openprize&amp;partnerId=${PartnerId}&amp;hashType=md5&amp;hash=${hash}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="2125597901">GameId</stringProp>
                <stringProp name="-1117735783">TermCode</stringProp>
                <stringProp name="536691167">PrizeTime</stringProp>
                <stringProp name="-1657357186">BaseCode</stringProp>
                <stringProp name="794953254">SpecialCode</stringProp>
                <stringProp name="-97416477">PrizeDetail</stringProp>
                <stringProp name="1286028380">ActSellAmount</stringProp>
                <stringProp name="21438278">ValidSellAmount</stringProp>
                <stringProp name="536577838">PrizePool</stringProp>
                <stringProp name="-356485461">AllSellAmount</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-1752045309">
                  <stringProp name="1086584">&quot;K3&quot;</stringProp>
                  <stringProp name="-749465577">&quot;1006134&quot;</stringProp>
                  <stringProp name="-721856876">&quot;20161006230652&quot;</stringProp>
                  <stringProp name="225207674">&quot;010203&quot;</stringProp>
                  <stringProp name="1088">&quot;&quot;</stringProp>
                  <stringProp name="925068831">\&quot;test\&quot;\]</stringProp>
                  <stringProp name="34196">&quot;0&quot;</stringProp>
                  <stringProp name="34196">&quot;0&quot;</stringProp>
                  <stringProp name="34196">&quot;0&quot;</stringProp>
                  <stringProp name="34196">&quot;0&quot;</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.sinodata.forJMeter.MD5Security;
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import com.sinodata.forJMeter.JsonJiaJieMi;

//组装中奖详情PrizeDetail
JSONArray ja = new JSONArray();

HashMap hm = new HashMap();
hm.put(&quot;AwardGrade&quot;,&quot;1&quot;);
hm.put(&quot;AwardName&quot;,&quot;和值4&quot;);
hm.put(&quot;ProWinNumber&quot;,&quot;0&quot;);
hm.put(&quot;WinMoney&quot;,&quot;80&quot;);
hm.put(&quot;WinNumber&quot;,&quot;0&quot;);

ja.add(0,JSONObject.fromObject(hm));

//组装RespContent
JSONObject rc = new JSONObject();
rc.put(&quot;ActSellAmount&quot;,&quot;10&quot;);
rc.put(&quot;AllSellAmount&quot;,&quot;20&quot;);
rc.put(&quot;BaseCode&quot;,&quot;156&quot;);
rc.put(&quot;GameId&quot;,&quot;S3&quot;);
rc.put(&quot;PrizePool&quot;,&quot;30&quot;);
rc.put(&quot;PrizeTime&quot;,&quot;20151006230652&quot;);
rc.put(&quot;SpecialCode&quot;,&quot;&quot;);
rc.put(&quot;TermCode&quot;,&quot;2016032&quot;);
rc.put(&quot;ValidSellAmount&quot;,&quot;0&quot;);
//将PrizeDetail放入RespContent
rc.element(&quot;PrizeDetail&quot;,ja);

log.info(&quot;=================&quot;);
//组装BodyData
JSONObject bd = new JSONObject();
bd.put(&quot;BackCode&quot;,&quot;SUCCESS&quot;);
bd.put(&quot;BackMsg&quot;,&quot;成功&quot;);
bd.put(&quot;RespContent&quot;,rc.toString());

log.info(&quot;**************请求加密前，BodyData=&quot; + bd.toString());

//加密BodyData数据
JsonJiaJieMi jjj = new JsonJiaJieMi(${appSecretKey},${DES3});
String bodyData = jjj.jiaMi(bd.toString());
vars.put(&quot;BodyData&quot;,bodyData);
log.info(&quot;**************请求加密后，BodyData=&quot; + bodyData);

//通过将BodyData进行md5转换，获取hash值
hash = MD5Security.md5(bodyData);
vars.put(&quot;hash&quot;,hash);
log.info(&quot;****************hash值为：&quot; + hash);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import com.sinodata.forJMeter.JsonJiaJieMi;

//获取请求响应内容
String response = prev.getResponseDataAsString();

//对响应内容进行解密
JsonJiaJieMi jjj = new JsonJiaJieMi(${appDecodeKey},${DES3});
String strTmp;
try{
	strTmp = jjj.jieMi(response);	
	}
	catch (Throwable ex){
		log.error(&quot;this is a wrong&quot;, ex);
	}
//打印解密后的响应内容
log.info(&quot;****************响应解密后：&quot; + strTmp);
vars.put(&quot;noticeReturnInfo&quot;,strTmp);
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">String str = vars.get(&quot;noticeReturnInfo&quot;);
if(!&quot;success&quot;.equals(str)){
	Failure = true;
	FailureMessage = &quot;回调开奖公告通知失败，回调响应值为：&quot; + str;
}
</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新期参数通知" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">10.10.41.189</stringProp>
            <stringProp name="HTTPSampler.port">1080</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/access/do?cmd=openterm&amp;partnerId=${PartnerId}&amp;hashType=md5&amp;hash=${hash}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="2125597901">GameId</stringProp>
                <stringProp name="-1117735783">TermCode</stringProp>
                <stringProp name="1383336141">StatusId</stringProp>
                <stringProp name="536691167">PrizeTime</stringProp>
                <stringProp name="931128054">BeginTime</stringProp>
                <stringProp name="57410088">EndTime</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-748488447">
                  <stringProp name="1086584">&quot;K3&quot;</stringProp>
                  <stringProp name="-751345386">&quot;1004001&quot;</stringProp>
                  <stringProp name="34227">&quot;1&quot;</stringProp>
                  <stringProp name="87489750">&quot;20161004230652&quot;</stringProp>
                  <stringProp name="87489750">&quot;20161004230652&quot;</stringProp>
                  <stringProp name="87489843">&quot;20161004230655&quot;</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.sinodata.forJMeter.MD5Security;
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import com.sinodata.forJMeter.JsonJiaJieMi;

//组装RespContent
JSONObject rc = new JSONObject();
rc.put(&quot;GameId&quot;,${GameId});
rc.put(&quot;TermCode&quot;,${TermCode});
rc.put(&quot;StatusId&quot;,${StatusId});
rc.put(&quot;BeginTime&quot;,${BeginTime});
rc.put(&quot;EndTime&quot;,${EndTime});

//组装BodyData
JSONObject bd = new JSONObject();
bd.put(&quot;BackCode&quot;,&quot;SUCCESS&quot;);
bd.put(&quot;BackMsg&quot;,&quot;成功&quot;);
bd.put(&quot;RespContent&quot;,rc.toString());
log.info(&quot;**************请求加密前，BodyData=&quot; + bd.toString());

//加密BodyData数据
JsonJiaJieMi jjj = new JsonJiaJieMi(${appSecretKey},${DES3});
String bodyData = jjj.jiaMi(bd.toString());
vars.put(&quot;BodyData&quot;,bodyData);
log.info(&quot;**************请求加密后，BodyData=&quot; + bodyData);

//通过将BodyData进行md5转换，获取hash值
hash = MD5Security.md5(bodyData);
vars.put(&quot;hash&quot;,hash);
log.info(&quot;****************hash值为：&quot; + hash);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import com.sinodata.forJMeter.JsonJiaJieMi;

//获取请求响应内容
String response = prev.getResponseDataAsString();

//对响应内容进行解密
JsonJiaJieMi jjj = new JsonJiaJieMi(${appDecodeKey},${DES3});
String strTmp;
try{
	strTmp = jjj.jieMi(response);	
	}
	catch (Throwable ex){
		log.error(&quot;this is a wrong&quot;, ex);
	}
//打印解密后的响应内容
log.info(&quot;****************响应解密后：&quot; + strTmp);
vars.put(&quot;noticeReturnInfo&quot;,strTmp);
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">String str = vars.get(&quot;noticeReturnInfo&quot;);
if(!&quot;success&quot;.equals(str)){
	Failure = true;
	FailureMessage = &quot;回调新期参数通知失败，回调响应值为：&quot; + str;
}
</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="使用图片查询彩票信息" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/access/do?cmd=imageTicket&amp;partnerId=${PartnerId}&amp;hashType=md5&amp;hash=${hash}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="false">
              <collectionProp name="UserParameters.names">
                <stringProp name="-794966476">ImageUrl</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="1850345611">
                  <stringProp name="1549238904">&quot;http://10.10.36.142:8080/picture/3D123.jpg&quot;</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.sinodata.forJMeter.MD5Security;
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import com.sinodata.forJMeter.JsonJiaJieMi;

//组装业务参数ReqContent
JSONObject rc = new JSONObject();
rc.put(&quot;ImageUrl&quot;,${ImageUrl});

String reqContent = rc.toString();
log.info(&quot;*******************reqContent:&quot; + reqContent);

//组装BodyData
JSONObject bd = new JSONObject();
bd.put(&quot;PartnerId&quot;,&quot;${PartnerId}&quot;);
bd.put(&quot;TimeStamp&quot;,&quot;${__time(yyyy-MM-dd HH:mm:ss,timeStamp)}&quot;);
bd.put(&quot;SerialNum&quot;,&quot;${__time(yyyyMMddHHmmss,curtermTime)}&quot;);
bd.put(&quot;Version&quot;,${Version});
bd.put(&quot;Token&quot;,vars.get(&quot;Token&quot;));
//bd.put(&quot;Token&quot;,&quot;8E788A6B9EF3E0D6B7963553C6C45C95&quot;);
bd.put(&quot;ReqContent&quot;,reqContent);
log.info(&quot;**************请求加密前，BodyData=&quot; + bd.toString());

//加密BodyData数据
JsonJiaJieMi jjj = new JsonJiaJieMi(${agentSecretKey},${DES3});
String bodyData = jjj.jiaMi(bd.toString());
vars.put(&quot;BodyData&quot;,bodyData);
log.info(&quot;**************请求加密后，BodyData=&quot; + bodyData);

//通过将BodyData进行md5转换，获取hash值
hash = MD5Security.md5(bodyData);
vars.put(&quot;hash&quot;,hash);
log.info(&quot;****************hash值为：&quot; + hash);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import com.sinodata.forJMeter.JsonJiaJieMi;

//获取请求响应内容
String response = prev.getResponseDataAsString();

//对响应内容进行解密
JsonJiaJieMi jjj = new JsonJiaJieMi(${agentSecretKey},${DES3});
String strTmp;
try{
	strTmp = jjj.jieMi(response);	
	}
	catch (Throwable ex){
		log.error(&quot;this is a wrong&quot;, ex);
	}
//打印解密后的响应内容
log.info(&quot;****************响应解密后：&quot; + strTmp);

//获取解密后响应内容的BackCode值
JSONObject jo = JSONObject.fromObject(strTmp);
if(jo.has(&quot;BackCode&quot;)){
	BackCode = new JSONObject().fromObject(strTmp).getString(&quot;BackCode&quot;);
	vars.put(&quot;BackCode&quot;,BackCode);
}else{
	log.info(&quot;****************响应BackCode为空****************&quot;);
	vars.put(&quot;BackCode&quot;,&quot;NULL&quot;);
	}
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">String str = vars.get(&quot;BackCode&quot;);
if(!&quot;SUCCESS&quot;.equals(str)){
	Failure = true;
	FailureMessage = &quot;使用图片查询彩票信息失败，BackCode响应值为：&quot; + str;
}
</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="简单控制器" enabled="false"/>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="541398246">ImageUrl_1</stringProp>
                <stringProp name="541398247">ImageUrl_2</stringProp>
                <stringProp name="541398248">ImageUrl_3</stringProp>
                <stringProp name="541398249">ImageUrl_4</stringProp>
                <stringProp name="541398250">ImageUrl_5</stringProp>
                <stringProp name="541398251">ImageUrl_6</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="1732333135">
                  <stringProp name="1549238904">&quot;http://10.10.36.142:8080/picture/3D123.jpg&quot;</stringProp>
                  <stringProp name="-844404565">&quot;http://10.10.36.142:8080/picture/SP612016004003.jpg&quot;</stringProp>
                  <stringProp name="569489143">&quot;http://10.10.36.142:8080/picture/K320161121077004.jpg&quot;</stringProp>
                  <stringProp name="-1006924373">&quot;http://10.10.36.142:8080/picture/C5152016005006.jpg&quot;</stringProp>
                  <stringProp name="1127933936">&quot;http://10.10.36.142:8080/picture/B0012016020001.jpg&quot;</stringProp>
                  <stringProp name="913234733">&quot;http://10.10.36.142:8080/picture/QL730001.jpg&quot;</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach控制器" enabled="true">
              <stringProp name="ForeachController.inputVal">ImageUrl</stringProp>
              <stringProp name="ForeachController.returnVal">ImageUrl</stringProp>
              <boolProp name="ForeachController.useSeparator">true</boolProp>
              <stringProp name="ForeachController.startIndex">1</stringProp>
              <stringProp name="ForeachController.endIndex">6</stringProp>
            </ForeachController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="使用图片查询彩票信息" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${BodyData}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">10.10.36.142</stringProp>
                <stringProp name="HTTPSampler.port">8188</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/api/access/do?cmd=imageTicket&amp;partnerId=${PartnerId}&amp;hashType=md5&amp;hash=${hash}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">import com.sinodata.forJMeter.MD5Security;
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import com.sinodata.forJMeter.JsonJiaJieMi;

//组装业务参数ReqContent
JSONObject rc = new JSONObject();
rc.put(&quot;ImageUrl&quot;,${ImageUrl});

String reqContent = rc.toString();
log.info(&quot;*******************reqContent:&quot; + reqContent);

//组装BodyData
JSONObject bd = new JSONObject();
bd.put(&quot;PartnerId&quot;,&quot;${PartnerId}&quot;);
bd.put(&quot;TimeStamp&quot;,&quot;${__time(yyyy-MM-dd HH:mm:ss,timeStamp)}&quot;);
bd.put(&quot;SerialNum&quot;,&quot;${__time(yyyyMMddHHmmss,curtermTime)}&quot;);
bd.put(&quot;Version&quot;,${Version});
//bd.put(&quot;Token&quot;,vars.get(&quot;Token&quot;));
bd.put(&quot;Token&quot;,&quot;8E788A6B9EF3E0D6B7963553C6C45C95&quot;);
bd.put(&quot;ReqContent&quot;,reqContent);
log.info(&quot;**************请求加密前，BodyData=&quot; + bd.toString());

//加密BodyData数据
JsonJiaJieMi jjj = new JsonJiaJieMi(${agentSecretKey},${DES3});
String bodyData = jjj.jiaMi(bd.toString());
vars.put(&quot;BodyData&quot;,bodyData);
log.info(&quot;**************请求加密后，BodyData=&quot; + bodyData);

//通过将BodyData进行md5转换，获取hash值
hash = MD5Security.md5(bodyData);
vars.put(&quot;hash&quot;,hash);
log.info(&quot;****************hash值为：&quot; + hash);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import com.sinodata.forJMeter.JsonJiaJieMi;

//获取请求响应内容
String response = prev.getResponseDataAsString();

//对响应内容进行解密
JsonJiaJieMi jjj = new JsonJiaJieMi(${agentSecretKey},${DES3});
String strTmp;
try{
	strTmp = jjj.jieMi(response);	
	}
	catch (Throwable ex){
		log.error(&quot;this is a wrong&quot;, ex);
	}
//打印解密后的响应内容
log.info(&quot;****************响应解密后：&quot; + strTmp);

//获取解密后响应内容的BackCode值
JSONObject jo = JSONObject.fromObject(strTmp);
if(jo.has(&quot;BackCode&quot;)){
	BackCode = new JSONObject().fromObject(strTmp).getString(&quot;BackCode&quot;);
	vars.put(&quot;BackCode&quot;,BackCode);
}else{
	log.info(&quot;****************响应BackCode为空****************&quot;);
	vars.put(&quot;BackCode&quot;,&quot;NULL&quot;);
	}
</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
                <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                  <stringProp name="BeanShellAssertion.query">String str = vars.get(&quot;BackCode&quot;);
if(!&quot;SUCCESS&quot;.equals(str)){
	Failure = true;
	FailureMessage = &quot;使用图片查询彩票信息失败，BackCode响应值为：&quot; + str;
}
</stringProp>
                  <stringProp name="BeanShellAssertion.filename"></stringProp>
                  <stringProp name="BeanShellAssertion.parameters"></stringProp>
                  <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
                </BeanShellAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="备用模板" enabled="false"/>
        <hashTree>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="身份验证" enabled="false">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">10.10.34.146:8188</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">0FD2672D2A5A5C4DA5200003</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">00003</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">2016-10-24 15:10:10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">1234567</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">1.0.0.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Sign" elementType="Argument">
                  <stringProp name="Argument.name">Sign</stringProp>
                  <stringProp name="Argument.value">SIKnEgpRix0lXhfXheMqGyZpHqEkojI8V8zTTHfwVl6hklyb2tK99En4ZHlH/hz2UFbV8KR5vrA+pd6XTi5Ujd2ilkbjgSRATCvUg3WcNoQaAsyXYnsFVqbljBV0EAmgRSHGGp3yZBew8t/lM2Hf92VjjvoKpIURdbCICctVK8I=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleAuth</stringProp>
          </JavaSampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import net.sf.json.JSONObject;

//获取请求响应内容
String response = prev.getResponseDataAsString();
log.info(&quot;===================response:&quot; + response);
if(!&quot;&quot;.equals(response)){
	JSONObject jo = JSONObject.fromObject(response);
	//获取解密后响应内容的Token值
	if(jo.has(&quot;RespContent&quot;)){
		RespContent = new JSONObject().fromObject(response).getString(&quot;RespContent&quot;);
		Token = new JSONObject().fromObject(RespContent).getString(&quot;Token&quot;);
		vars.put(&quot;Token&quot;,Token);
		log.info(&quot;***************************&quot; + Token);
	}else{
		log.info(&quot;****************响应Token为空****************&quot;);
		vars.put(&quot;Token&quot;,&quot;NULL&quot;);
	}
}else{
	log.info(&quot;****************响应response为空****************&quot;);
}

</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="查询开奖公告" enabled="false">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">10.10.54.149:8188</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">0FD2672D2A5A5C4DA5200001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">00001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">2016-10-24 15:10:10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">1234567</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">1.0.0.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">${Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GameId" elementType="Argument">
                  <stringProp name="Argument.name">GameId</stringProp>
                  <stringProp name="Argument.value">K3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TermCode" elementType="Argument">
                  <stringProp name="Argument.name">TermCode</stringProp>
                  <stringProp name="Argument.value">0101153</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryPrize</stringProp>
          </JavaSampler>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="查询彩票信息" enabled="false">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">10.10.35.146:8188</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">0FD2672D2A5A5C4DA5200003</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">00003</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">2016-04-27 10:39:10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">2016040001113</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">1.0.0.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">${Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TicketCode" elementType="Argument">
                  <stringProp name="Argument.name">TicketCode</stringProp>
                  <stringProp name="Argument.value">275193390C188707D994</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryTicketEx</stringProp>
          </JavaSampler>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="查询新期" enabled="false">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">10.10.35.146:8188</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">0FD2672D2A5A5C4DA5200003</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">00003</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">2016-10-24 15:10:10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">1234567</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">1.0.0.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">${Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GameId" elementType="Argument">
                  <stringProp name="Argument.name">GameId</stringProp>
                  <stringProp name="Argument.value">S3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryTerm</stringProp>
          </JavaSampler>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="浙江（无BASE64）" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipAndPort" elementType="Argument">
                <stringProp name="Argument.name">ipAndPort</stringProp>
                <stringProp name="Argument.value">10.10.33.142:8189</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="agentSecretKey" elementType="Argument">
                <stringProp name="Argument.name">agentSecretKey</stringProp>
                <stringProp name="Argument.value">0FD2672D2A5A5C4DA5200001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="DES3" elementType="Argument">
                <stringProp name="Argument.name">DES3</stringProp>
                <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PartnerId" elementType="Argument">
                <stringProp name="Argument.name">PartnerId</stringProp>
                <stringProp name="Argument.value">00001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TimeStamp" elementType="Argument">
                <stringProp name="Argument.name">TimeStamp</stringProp>
                <stringProp name="Argument.value">2016-10-24 15:10:10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SerialNum" elementType="Argument">
                <stringProp name="Argument.name">SerialNum</stringProp>
                <stringProp name="Argument.value">1234567</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Version" elementType="Argument">
                <stringProp name="Argument.name">Version</stringProp>
                <stringProp name="Argument.value">1.0.0.0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Sign" elementType="Argument">
                <stringProp name="Argument.name">Sign</stringProp>
                <stringProp name="Argument.value">SIKnEgpRix0lXhfXheMqGyZpHqEkojI8V8zTTHfwVl6hklyb2tK99En4ZHlH/hz2UFbV8KR5vrA+pd6XTi5Ujd2ilkbjgSRATCvUg3WcNoQaAsyXYnsFVqbljBV0EAmgRSHGGp3yZBew8t/lM2Hf92VjjvoKpIURdbCICctVK8I=</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="7.1.2.1.验票查询" enabled="true">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">${Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TicketInfo" elementType="Argument">
                  <stringProp name="Argument.name">TicketInfo</stringProp>
                  <stringProp name="Argument.value">9A575BBEYYZDB4B584YYYYZ4A06ZYZACYBZYABBC</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleAgentTicketInfo</stringProp>
          </JavaSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="392582829">&quot;TradeStatus&quot;:&quot;200001&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="江西（无BASE64）" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipAndPort" elementType="Argument">
                <stringProp name="Argument.name">ipAndPort</stringProp>
                <stringProp name="Argument.value">10.10.36.142:8189</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="agentSecretKey" elementType="Argument">
                <stringProp name="Argument.name">agentSecretKey</stringProp>
                <stringProp name="Argument.value">0FD2672D2A5A5C4DA5200001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">D734B7E634E78EBB9A467B0E,0FD2672D2A5A5C4DA5200001</stringProp>
              </elementProp>
              <elementProp name="DES3" elementType="Argument">
                <stringProp name="Argument.name">DES3</stringProp>
                <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PartnerId" elementType="Argument">
                <stringProp name="Argument.name">PartnerId</stringProp>
                <stringProp name="Argument.value">00001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">20002,00001</stringProp>
              </elementProp>
              <elementProp name="TimeStamp" elementType="Argument">
                <stringProp name="Argument.name">TimeStamp</stringProp>
                <stringProp name="Argument.value">2016-10-24 15:10:10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SerialNum" elementType="Argument">
                <stringProp name="Argument.name">SerialNum</stringProp>
                <stringProp name="Argument.value">1234567</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Version" elementType="Argument">
                <stringProp name="Argument.name">Version</stringProp>
                <stringProp name="Argument.value">1.0.0.0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Sign" elementType="Argument">
                <stringProp name="Argument.name">Sign</stringProp>
                <stringProp name="Argument.value">SIKnEgpRix0lXhfXheMqGyZpHqEkojI8V8zTTHfwVl6hklyb2tK99En4ZHlH/hz2UFbV8KR5vrA+pd6XTi5Ujd2ilkbjgSRATCvUg3WcNoQaAsyXYnsFVqbljBV0EAmgRSHGGp3yZBew8t/lM2Hf92VjjvoKpIURdbCICctVK8I=</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="AreaCode" elementType="Argument">
                <stringProp name="Argument.name">AreaCode</stringProp>
                <stringProp name="Argument.value">0000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">E:\jmeter_csv\t36jiangxi\access.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">StationCode,Barcode,OutOrderId,OrderMoney,OpreratorId</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="身份验证" enabled="false">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Sign" elementType="Argument">
                  <stringProp name="Argument.name">Sign</stringProp>
                  <stringProp name="Argument.value">${Sign}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleAuth</stringProp>
          </JavaSampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import net.sf.json.JSONObject;

//获取请求响应内容
String response = prev.getResponseDataAsString();
log.info(&quot;===================response:&quot; + response);
if(!&quot;&quot;.equals(response)){
	JSONObject jo = JSONObject.fromObject(response);
	//获取解密后响应内容的Token值
	if(jo.has(&quot;RespContent&quot;)){
		RespContent = new JSONObject().fromObject(response).getString(&quot;RespContent&quot;);
		Token = new JSONObject().fromObject(RespContent).getString(&quot;Token&quot;);
		vars.put(&quot;Token&quot;,Token);
		log.info(&quot;***************************&quot; + Token);
	}else{
		log.info(&quot;****************响应Token为空****************&quot;);
		vars.put(&quot;Token&quot;,&quot;NULL&quot;);
	}
}else{
	log.info(&quot;****************响应response为空****************&quot;);
}

</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="3.1使用票号查询彩票信息" enabled="false">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">${Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TicketCode" elementType="Argument">
                  <stringProp name="Argument.name">TicketCode</stringProp>
                  <stringProp name="Argument.value">897390899E59E86B53A0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryTicketEx</stringProp>
          </JavaSampler>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="3.2开奖公告查询" enabled="false">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">${Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GameId" elementType="Argument">
                  <stringProp name="Argument.name">GameId</stringProp>
                  <stringProp name="Argument.value">SP61</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TermCode" elementType="Argument">
                  <stringProp name="Argument.name">TermCode</stringProp>
                  <stringProp name="Argument.value">2016010</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryPrize</stringProp>
          </JavaSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1608611212">&quot;TermCode&quot;:&quot;0207031&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="3.3期参数查询" enabled="false">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">${Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GameId" elementType="Argument">
                  <stringProp name="Argument.name">GameId</stringProp>
                  <stringProp name="Argument.value">K3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryTerm</stringProp>
          </JavaSampler>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="站点缴款" enabled="false">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">10.10.36.142:8189</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">0FD2672D2A5A5C4DA5200001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">00001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">2016-04-27 10:39:10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">2016040001113</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">1.0.0.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">92EA48927E3BFA1755A64FBC16B6B901</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RunCode" elementType="Argument">
                  <stringProp name="Argument.name">RunCode</stringProp>
                  <stringProp name="Argument.value">1231231226</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="StationId" elementType="Argument">
                  <stringProp name="Argument.name">StationId</stringProp>
                  <stringProp name="Argument.value">36010001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PaymentAmount" elementType="Argument">
                  <stringProp name="Argument.name">PaymentAmount</stringProp>
                  <stringProp name="Argument.value">40000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PaymentDate" elementType="Argument">
                  <stringProp name="Argument.name">PaymentDate</stringProp>
                  <stringProp name="Argument.value">2015-06-10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PaymentTime" elementType="Argument">
                  <stringProp name="Argument.name">PaymentTime</stringProp>
                  <stringProp name="Argument.value">09:09:09</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="CheckCode" elementType="Argument">
                  <stringProp name="Argument.name">CheckCode</stringProp>
                  <stringProp name="Argument.value">default</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleLottMoney</stringProp>
          </JavaSampler>
          <hashTree/>
          <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="false">
            <intProp name="groupSize">2</intProp>
            <longProp name="timeoutInMs">0</longProp>
          </SyncTimer>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="3.2条码支付创建订单" enabled="true">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">10.10.36.142:8189</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">0FD2672D2A5A5C4DA5200001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">00001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">2017-05-04 15:39:10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">&quot;201705040003&quot;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">1.0.0.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AreaCode" elementType="Argument">
                  <stringProp name="Argument.name">AreaCode</stringProp>
                  <stringProp name="Argument.value">0000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="StationCode" elementType="Argument">
                  <stringProp name="Argument.name">StationCode</stringProp>
                  <stringProp name="Argument.value">${StationCode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Barcode" elementType="Argument">
                  <stringProp name="Argument.name">Barcode</stringProp>
                  <stringProp name="Argument.value">${Barcode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="OutOrderId" elementType="Argument">
                  <stringProp name="Argument.name">OutOrderId</stringProp>
                  <stringProp name="Argument.value">${OutOrderId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="OrderMoney" elementType="Argument">
                  <stringProp name="Argument.name">OrderMoney</stringProp>
                  <stringProp name="Argument.value">${OrderMoney}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="OpreratorId" elementType="Argument">
                  <stringProp name="Argument.name">OpreratorId</stringProp>
                  <stringProp name="Argument.value">${OpreratorId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSample4OrderCreate</stringProp>
          </JavaSampler>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="3.3支付结果查询" enabled="false">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">10.10.36.142:8189</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">0FD2672D2A5A5C4DA5200001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">00001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">2016-04-27 10:39:10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">2016040001113</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">1.0.0.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AreaCode" elementType="Argument">
                  <stringProp name="Argument.name">AreaCode</stringProp>
                  <stringProp name="Argument.value">0000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="StationCode" elementType="Argument">
                  <stringProp name="Argument.name">StationCode</stringProp>
                  <stringProp name="Argument.value">36010001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="OrderId" elementType="Argument">
                  <stringProp name="Argument.name">OrderId</stringProp>
                  <stringProp name="Argument.value">&quot;36MM20170601122058000001&quot;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="OutOrderId" elementType="Argument">
                  <stringProp name="Argument.name">OutOrderId</stringProp>
                  <stringProp name="Argument.value">&quot;20170601122058000001&quot;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSample4OrderQuery</stringProp>
          </JavaSampler>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="3.3电脑票出票通知" enabled="false">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AreaCode" elementType="Argument">
                  <stringProp name="Argument.name">AreaCode</stringProp>
                  <stringProp name="Argument.value">${AreaCode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="OrderNo" elementType="Argument">
                  <stringProp name="Argument.name">OrderNo</stringProp>
                  <stringProp name="Argument.value">OrderNo0000001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="OrderType" elementType="Argument">
                  <stringProp name="Argument.name">OrderType</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GameId" elementType="Argument">
                  <stringProp name="Argument.name">GameId</stringProp>
                  <stringProp name="Argument.value">B001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TermCode" elementType="Argument">
                  <stringProp name="Argument.name">TermCode</stringProp>
                  <stringProp name="Argument.value">2015015</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Money" elementType="Argument">
                  <stringProp name="Argument.name">Money</stringProp>
                  <stringProp name="Argument.value">8888</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PhoneCode" elementType="Argument">
                  <stringProp name="Argument.name">PhoneCode</stringProp>
                  <stringProp name="Argument.value">13800138001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSample4TicketOrder</stringProp>
          </JavaSampler>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="3.8电脑票出票查询" enabled="false">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">10.10.36.142:8189</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">2016-04-27 10:39:10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">2016040001113</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">1.0.0.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">${Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="OrderNo" elementType="Argument">
                  <stringProp name="Argument.name">OrderNo</stringProp>
                  <stringProp name="Argument.value">&quot;ET150204122733160180&quot;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSample4CTicketOrder</stringProp>
          </JavaSampler>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="站点缴款e支付" enabled="false">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">10.10.36.142:8189</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">0FD2672D2A5A5C4DA5200001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">00001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">2016-04-27 10:39:10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">2016040001113</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">1.0.0.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">${Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RunCode" elementType="Argument">
                  <stringProp name="Argument.name">RunCode</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="BankCode" elementType="Argument">
                  <stringProp name="Argument.name">BankCode</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="StationId" elementType="Argument">
                  <stringProp name="Argument.name">StationId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PaymentType" elementType="Argument">
                  <stringProp name="Argument.name">PaymentType</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PaymentAmount" elementType="Argument">
                  <stringProp name="Argument.name">PaymentAmount</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PaymentDate" elementType="Argument">
                  <stringProp name="Argument.name">PaymentDate</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PaymentTime" elementType="Argument">
                  <stringProp name="Argument.name">PaymentTime</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="CheckCode" elementType="Argument">
                  <stringProp name="Argument.name">CheckCode</stringProp>
                  <stringProp name="Argument.value">default</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleLottMoneyCash</stringProp>
          </JavaSampler>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="3.9开奖号码查询" enabled="false">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">${Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GameId" elementType="Argument">
                  <stringProp name="Argument.name">GameId</stringProp>
                  <stringProp name="Argument.value">SP61</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TermCode" elementType="Argument">
                  <stringProp name="Argument.name">TermCode</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryPrizeNum</stringProp>
          </JavaSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1608611212">&quot;TermCode&quot;:&quot;0207031&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="河南（无BASE64）" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">15</stringProp>
        </LoopController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipAndPort" elementType="Argument">
                <stringProp name="Argument.name">ipAndPort</stringProp>
                <stringProp name="Argument.value">10.10.41.142:8189</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="agentSecretKey" elementType="Argument">
                <stringProp name="Argument.name">agentSecretKey</stringProp>
                <stringProp name="Argument.value">0FD2672D2A5A5C4DA5200001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="DES3" elementType="Argument">
                <stringProp name="Argument.name">DES3</stringProp>
                <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PartnerId" elementType="Argument">
                <stringProp name="Argument.name">PartnerId</stringProp>
                <stringProp name="Argument.value">00001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TimeStamp" elementType="Argument">
                <stringProp name="Argument.name">TimeStamp</stringProp>
                <stringProp name="Argument.value">2016-10-24 15:10:10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SerialNum" elementType="Argument">
                <stringProp name="Argument.name">SerialNum</stringProp>
                <stringProp name="Argument.value">1234567</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Version" elementType="Argument">
                <stringProp name="Argument.name">Version</stringProp>
                <stringProp name="Argument.value">1.0.0.0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Sign" elementType="Argument">
                <stringProp name="Argument.name">Sign</stringProp>
                <stringProp name="Argument.value">SIKnEgpRix0lXhfXheMqGyZpHqEkojI8V8zTTHfwVl6hklyb2tK99En4ZHlH/hz2UFbV8KR5vrA+pd6XTi5Ujd2ilkbjgSRATCvUg3WcNoQaAsyXYnsFVqbljBV0EAmgRSHGGp3yZBew8t/lM2Hf92VjjvoKpIURdbCICctVK8I=</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">E:\jmeter_csv\t41henan\access.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">TicketInfo</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="7.1.2.1.验票查询" enabled="true">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">${Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TicketInfo" elementType="Argument">
                  <stringProp name="Argument.name">TicketInfo</stringProp>
                  <stringProp name="Argument.value">${TicketInfo}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleAgentTicketData</stringProp>
          </JavaSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="392582829">&quot;TradeStatus&quot;:&quot;200001&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="32江苏（无BASE64）" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipAndPort" elementType="Argument">
                <stringProp name="Argument.name">ipAndPort</stringProp>
                <stringProp name="Argument.value">10.10.32.146:8189</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="agentSecretKey" elementType="Argument">
                <stringProp name="Argument.name">agentSecretKey</stringProp>
                <stringProp name="Argument.value">0FD2672D2A5A5C4DA5200001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">F123EC930D7F2DA25433F29C,0FD2672D2A5A5C4DA5200001</stringProp>
              </elementProp>
              <elementProp name="DES3" elementType="Argument">
                <stringProp name="Argument.name">DES3</stringProp>
                <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PartnerId" elementType="Argument">
                <stringProp name="Argument.name">PartnerId</stringProp>
                <stringProp name="Argument.value">00001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">00004,00001</stringProp>
              </elementProp>
              <elementProp name="TimeStamp" elementType="Argument">
                <stringProp name="Argument.name">TimeStamp</stringProp>
                <stringProp name="Argument.value">2016-10-24 15:10:10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SerialNum" elementType="Argument">
                <stringProp name="Argument.name">SerialNum</stringProp>
                <stringProp name="Argument.value">1234567</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Version" elementType="Argument">
                <stringProp name="Argument.name">Version</stringProp>
                <stringProp name="Argument.value">1.0.0.0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Sign" elementType="Argument">
                <stringProp name="Argument.name">Sign</stringProp>
                <stringProp name="Argument.value">SIKnEgpRix0lXhfXheMqGyZpHqEkojI8V8zTTHfwVl6hklyb2tK99En4ZHlH/hz2UFbV8KR5vrA+pd6XTi5Ujd2ilkbjgSRATCvUg3WcNoQaAsyXYnsFVqbljBV0EAmgRSHGGp3yZBew8t/lM2Hf92VjjvoKpIURdbCICctVK8I=</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="AreaCode" elementType="Argument">
                <stringProp name="Argument.name">AreaCode</stringProp>
                <stringProp name="Argument.value">0000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">E:\jmeter_csv\t32jiangsu\access.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">StationCode,Barcode,OutOrderId,OrderMoney,OpreratorId</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="filename">E:\jmeter_csv\t32jiangsu\access.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">StationCode,Barcode,OutOrderId,OrderMoney,OpreratorId</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="3.1使用票号查询彩票信息" enabled="false">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">${Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TicketCode" elementType="Argument">
                  <stringProp name="Argument.name">TicketCode</stringProp>
                  <stringProp name="Argument.value">A7011634103CDF4807A9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryTicketEx</stringProp>
          </JavaSampler>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="3.2开奖公告查询" enabled="false">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">${Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GameId" elementType="Argument">
                  <stringProp name="Argument.name">GameId</stringProp>
                  <stringProp name="Argument.value">QL730</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TermCode" elementType="Argument">
                  <stringProp name="Argument.name">TermCode</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryPrize</stringProp>
          </JavaSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1608611212">&quot;TermCode&quot;:&quot;0207031&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="3.3期参数查询" enabled="false">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">${Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GameId" elementType="Argument">
                  <stringProp name="Argument.name">GameId</stringProp>
                  <stringProp name="Argument.value">B001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryTerm</stringProp>
          </JavaSampler>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="3.2条码支付创建订单" enabled="true">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">10.10.32.146:8189</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">0FD2672D2A5A5C4DA5200001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">00001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">2017-05-04 15:39:10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">&quot;201705040003&quot;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">1.0.0.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AreaCode" elementType="Argument">
                  <stringProp name="Argument.name">AreaCode</stringProp>
                  <stringProp name="Argument.value">0000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="StationCode" elementType="Argument">
                  <stringProp name="Argument.name">StationCode</stringProp>
                  <stringProp name="Argument.value">${StationCode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Barcode" elementType="Argument">
                  <stringProp name="Argument.name">Barcode</stringProp>
                  <stringProp name="Argument.value">${Barcode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="OutOrderId" elementType="Argument">
                  <stringProp name="Argument.name">OutOrderId</stringProp>
                  <stringProp name="Argument.value">${OutOrderId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="OrderMoney" elementType="Argument">
                  <stringProp name="Argument.name">OrderMoney</stringProp>
                  <stringProp name="Argument.value">${OrderMoney}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="OpreratorId" elementType="Argument">
                  <stringProp name="Argument.name">OpreratorId</stringProp>
                  <stringProp name="Argument.value">${OpreratorId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSample4OrderCreate</stringProp>
          </JavaSampler>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="3.3支付结果查询" enabled="false">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">10.10.36.142:8189</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">0FD2672D2A5A5C4DA5200001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">00001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">2016-04-27 10:39:10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">2016040001113</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">1.0.0.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AreaCode" elementType="Argument">
                  <stringProp name="Argument.name">AreaCode</stringProp>
                  <stringProp name="Argument.value">0000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="StationCode" elementType="Argument">
                  <stringProp name="Argument.name">StationCode</stringProp>
                  <stringProp name="Argument.value">36010001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="OrderId" elementType="Argument">
                  <stringProp name="Argument.name">OrderId</stringProp>
                  <stringProp name="Argument.value">&quot;36MM20170601122058000001&quot;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="OutOrderId" elementType="Argument">
                  <stringProp name="Argument.name">OutOrderId</stringProp>
                  <stringProp name="Argument.value">&quot;20170601122058000001&quot;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSample4OrderQuery</stringProp>
          </JavaSampler>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="福建（无BASE64）" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipAndPort" elementType="Argument">
                <stringProp name="Argument.name">ipAndPort</stringProp>
                <stringProp name="Argument.value">10.10.35.146:8188</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="agentSecretKey" elementType="Argument">
                <stringProp name="Argument.name">agentSecretKey</stringProp>
                <stringProp name="Argument.value">0FD2672D2A5A5C4DA5200003</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">E433B7E634E78EBB9A467OP4,0FD2672D2A5A5C4DA5200003</stringProp>
              </elementProp>
              <elementProp name="DES3" elementType="Argument">
                <stringProp name="Argument.name">DES3</stringProp>
                <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PartnerId" elementType="Argument">
                <stringProp name="Argument.name">PartnerId</stringProp>
                <stringProp name="Argument.value">00003</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">20004,00003</stringProp>
              </elementProp>
              <elementProp name="TimeStamp" elementType="Argument">
                <stringProp name="Argument.name">TimeStamp</stringProp>
                <stringProp name="Argument.value">2016-10-24 15:10:10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SerialNum" elementType="Argument">
                <stringProp name="Argument.name">SerialNum</stringProp>
                <stringProp name="Argument.value">1234567</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Version" elementType="Argument">
                <stringProp name="Argument.name">Version</stringProp>
                <stringProp name="Argument.value">1.0.0.0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="path" elementType="Argument">
                <stringProp name="Argument.name">path</stringProp>
                <stringProp name="Argument.value">&quot;F:\\1\\test-sile.p12&quot;</stringProp>
                <stringProp name="Argument.desc">文件证书存放在客户端的绝对路径地址</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="passwd" elementType="Argument">
                <stringProp name="Argument.name">passwd</stringProp>
                <stringProp name="Argument.value">&quot;123456&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">测试时填“123456”</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="4.1身份验证" enabled="false">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Sign" elementType="Argument">
                  <stringProp name="Argument.name">Sign</stringProp>
                  <stringProp name="Argument.value">${Sign}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSample4NewAuth</stringProp>
          </JavaSampler>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.sinodata.forJMeter.PrivateKeyUtil;

String path = ${path};
//log.info(&quot;=======path:&quot;+path);
StringBuffer sb = new StringBuffer();
sb.append(&quot;${PartnerId}&quot;).append(&quot;${TimeStamp}&quot;).append(&quot;${SerialNum}&quot;);
String inData = sb.toString();
//log.info(&quot;=======inData:&quot;+inData);
String passwd = ${passwd};
//log.info(&quot;=======passwd:&quot;+passwd);

//调用PrivateKeyUtil.sign方法返回正确的sign
String sign = PrivateKeyUtil.sign(path,inData,passwd);
vars.put(&quot;Sign&quot;,sign);
log.info(&quot;=======Sign=======:&quot;+vars.get(&quot;Sign&quot;));</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import net.sf.json.JSONObject;

//获取请求响应内容
String response = prev.getResponseDataAsString();
log.info(&quot;===================response:&quot; + response);
if(!&quot;&quot;.equals(response)){
	JSONObject jo = JSONObject.fromObject(response);
	//获取解密后响应内容的Token值
	if(jo.has(&quot;RespContent&quot;)){
		RespContent = new JSONObject().fromObject(response).getString(&quot;RespContent&quot;);
		Token = new JSONObject().fromObject(RespContent).getString(&quot;Token&quot;);
		vars.put(&quot;Token&quot;,Token);
		log.info(&quot;***************************Token:&quot; + Token);
		Keyt = new JSONObject().fromObject(RespContent).getString(&quot;Keyt&quot;);
		vars.put(&quot;Keyt&quot;,Keyt);
		log.info(&quot;***************************Keyt:&quot; + Keyt);
	}else{
		log.info(&quot;****************响应Token为空****************&quot;);
		vars.put(&quot;Token&quot;,&quot;NULL&quot;);
	}
}else{
	log.info(&quot;****************响应response为空****************&quot;);
}

</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="4.2开奖公告查询" enabled="true">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">PUHROINTBZRIWY7BPEH8NCPB</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">A8AC70EEED91BE41237EE75EB69A38DA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GameId" elementType="Argument">
                  <stringProp name="Argument.name">GameId</stringProp>
                  <stringProp name="Argument.value">S3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TermCode" elementType="Argument">
                  <stringProp name="Argument.name">TermCode</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryPrize</stringProp>
          </JavaSampler>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">log.info(&quot;***************:&quot; + &quot;${Token}&quot;);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1149187101">SUCCESS</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="83深圳（无BASE64）" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipAndPort" elementType="Argument">
                <stringProp name="Argument.name">ipAndPort</stringProp>
                <stringProp name="Argument.value">10.10.83.142:8189</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="agentSecretKey" elementType="Argument">
                <stringProp name="Argument.name">agentSecretKey</stringProp>
                <stringProp name="Argument.value">0FD2672D2A5A5C4DA5200003</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">F123EC930D7F2DA25433F29C,0FD2672D2A5A5C4DA5200001</stringProp>
              </elementProp>
              <elementProp name="DES3" elementType="Argument">
                <stringProp name="Argument.name">DES3</stringProp>
                <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PartnerId" elementType="Argument">
                <stringProp name="Argument.name">PartnerId</stringProp>
                <stringProp name="Argument.value">00003</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">00004,00001</stringProp>
              </elementProp>
              <elementProp name="TimeStamp" elementType="Argument">
                <stringProp name="Argument.name">TimeStamp</stringProp>
                <stringProp name="Argument.value">2016-10-24 15:10:10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SerialNum" elementType="Argument">
                <stringProp name="Argument.name">SerialNum</stringProp>
                <stringProp name="Argument.value">1234567</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Version" elementType="Argument">
                <stringProp name="Argument.name">Version</stringProp>
                <stringProp name="Argument.value">1.0.0.0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Sign" elementType="Argument">
                <stringProp name="Argument.name">Sign</stringProp>
                <stringProp name="Argument.value">SIKnEgpRix0lXhfXheMqGyZpHqEkojI8V8zTTHfwVl6hklyb2tK99En4ZHlH/hz2UFbV8KR5vrA+pd6XTi5Ujd2ilkbjgSRATCvUg3WcNoQaAsyXYnsFVqbljBV0EAmgRSHGGp3yZBew8t/lM2Hf92VjjvoKpIURdbCICctVK8I=</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="AreaCode" elementType="Argument">
                <stringProp name="Argument.name">AreaCode</stringProp>
                <stringProp name="Argument.value">0000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="filename">E:\jmeter_csv\t32jiangsu\access.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">StationCode,Barcode,OutOrderId,OrderMoney,OpreratorId</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="7.1.2.1.身份验证" enabled="true">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Sign" elementType="Argument">
                  <stringProp name="Argument.name">Sign</stringProp>
                  <stringProp name="Argument.value">${Sign}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleAuth</stringProp>
          </JavaSampler>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="false">
              <collectionProp name="UserParameters.names">
                <stringProp name="208335843">PartnerId</stringProp>
                <stringProp name="-1950315510">agentSecretKey</stringProp>
                <stringProp name="2576861">Sign</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-2133575796">
                  <stringProp name="45806643">00003</stringProp>
                  <stringProp name="110931621">0FD2672D2A5A5C4DA5200003</stringProp>
                  <stringProp name="-890850763">xjlMBEIWxDE6xh3zn7hWNaD+/L870pxw1Okx9X/xrmcVUhOjnz7w80CYWRIWr2u4Jxto13ntmKEFperruvEbN2JBwNvNCTTJVnP20kpYIjqKk7rPu7Ko6X/bia90vK/E4CiKjG+MtgN4ODfsF0WuqUxv8scmjug+ILuYHznnSV0=</stringProp>
                </collectionProp>
                <collectionProp name="212723359">
                  <stringProp name="45806644">00004</stringProp>
                  <stringProp name="110931622">0FD2672D2A5A5C4DA5200004</stringProp>
                  <stringProp name="1404070582">38zfcELlpoemrQRoo0C4kDFGldJ6/KG1aXYrnODqGDCaYO8tgD181+iR7O7CTYGlPyyXjlc5uwwk9gZ/mvngeYiTDzTmNGN5AsddiX4fs+kXoWUM5BEst++cF6yYRmdCVqCyqnCNs2oa2F1n7HqPnHWqi/xZNsfdEwRF6ShL5II=</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import net.sf.json.JSONObject;

//获取请求响应内容
String response = prev.getResponseDataAsString();
log.info(&quot;===================response:&quot; + response);
if(!&quot;&quot;.equals(response)){
	JSONObject jo = JSONObject.fromObject(response);
	//获取解密后响应内容的Token值
	if(jo.has(&quot;RespContent&quot;)){
		RespContent = new JSONObject().fromObject(response).getString(&quot;RespContent&quot;);
		Token = new JSONObject().fromObject(RespContent).getString(&quot;Token&quot;);
		vars.put(&quot;Token&quot;,Token);
		log.info(&quot;***************************Token：&quot; + Token);
	}else{
		log.info(&quot;****************响应Token为空****************&quot;);
		vars.put(&quot;Token&quot;,&quot;NULL&quot;);
	}
}else{
	log.info(&quot;****************响应response为空****************&quot;);
}

</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言（返回310003）" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1407308161">&quot;310003&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="7.1.2.4.开奖公告查询(电脑票)" enabled="true">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">${Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="GameId" elementType="Argument">
                  <stringProp name="Argument.name">GameId</stringProp>
                  <stringProp name="Argument.value">S3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TermCode" elementType="Argument">
                  <stringProp name="Argument.name">TermCode</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryPrize</stringProp>
          </JavaSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言（返回200019）" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1971527450">&quot;200019&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="即开票接入" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1487039686000</longProp>
        <longProp name="ThreadGroup.end_time">1487039686000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="ipAndPort" elementType="Argument">
              <stringProp name="Argument.name">ipAndPort</stringProp>
              <stringProp name="Argument.value">10.10.32.146:8189</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">AccessMark的启动IP和PORT</stringProp>
            </elementProp>
            <elementProp name="DES3" elementType="Argument">
              <stringProp name="Argument.name">DES3</stringProp>
              <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="agentSecretKey" elementType="Argument">
              <stringProp name="Argument.name">agentSecretKey</stringProp>
              <stringProp name="Argument.value">302791FCCD086B11E47C816D</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">CE268277ED19493BE3679B30,302791FCCD086B11E47C816D,F123EC930D7F2DA25433F29C</stringProp>
            </elementProp>
            <elementProp name="PartnerId" elementType="Argument">
              <stringProp name="Argument.name">PartnerId</stringProp>
              <stringProp name="Argument.value">00003</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">00001,00003,00004</stringProp>
            </elementProp>
            <elementProp name="Sign" elementType="Argument">
              <stringProp name="Argument.name">Sign</stringProp>
              <stringProp name="Argument.value">nrR7S1wqxuS6E0gUSh26f5s6Y+FIt4d1k95K7WxfmN2DCndlLpaLaixpIhmocJ1u0cIr4rAmC8HERZkhFWqlNx23Rao+t5OVoDtDOBnttqmVac0aQZ6Oxl26ycUUI4PlAyl9Z4/lOsjammg3kzplvnEsW0jl6hS/UH+b76Ui/8c=</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="TimeStamp" elementType="Argument">
              <stringProp name="Argument.name">TimeStamp</stringProp>
              <stringProp name="Argument.value">2016-10-24 15:10:10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SerialNum" elementType="Argument">
              <stringProp name="Argument.name">SerialNum</stringProp>
              <stringProp name="Argument.value">1234567</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Version" elementType="Argument">
              <stringProp name="Argument.name">Version</stringProp>
              <stringProp name="Argument.value">1.0.0.0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="RunCode" elementType="Argument">
              <stringProp name="Argument.name">RunCode</stringProp>
              <stringProp name="Argument.value">1234567890123456789</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="CardId" elementType="Argument">
              <stringProp name="Argument.name">CardId</stringProp>
              <stringProp name="Argument.value">150404195109259802</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="IMEI" elementType="Argument">
              <stringProp name="Argument.name">IMEI</stringProp>
              <stringProp name="Argument.value">123456789012345</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="MobileCode" elementType="Argument">
              <stringProp name="Argument.name">MobileCode</stringProp>
              <stringProp name="Argument.value">13723780321</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="DataArea" elementType="Argument">
              <stringProp name="Argument.name">DataArea</stringProp>
              <stringProp name="Argument.value">G0239130160000003148EFBJRKPBBQBQNENAYU014</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Token" elementType="Argument">
              <stringProp name="Argument.name">Token</stringProp>
              <stringProp name="Argument.value">token1234567890</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
          <stringProp name="filename">F:\jmeter_csv\G023913016.txt</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">DataArea</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="7.1.2.2.验奖查询" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipAndPort" elementType="Argument">
                <stringProp name="Argument.name">ipAndPort</stringProp>
                <stringProp name="Argument.value">${ipAndPort}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="agentSecretKey" elementType="Argument">
                <stringProp name="Argument.name">agentSecretKey</stringProp>
                <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="DES3" elementType="Argument">
                <stringProp name="Argument.name">DES3</stringProp>
                <stringProp name="Argument.value">${DES3}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PartnerId" elementType="Argument">
                <stringProp name="Argument.name">PartnerId</stringProp>
                <stringProp name="Argument.value">${PartnerId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TimeStamp" elementType="Argument">
                <stringProp name="Argument.name">TimeStamp</stringProp>
                <stringProp name="Argument.value">${TimeStamp}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SerialNum" elementType="Argument">
                <stringProp name="Argument.name">SerialNum</stringProp>
                <stringProp name="Argument.value">${SerialNum}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Version" elementType="Argument">
                <stringProp name="Argument.name">Version</stringProp>
                <stringProp name="Argument.value">${Version}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Token" elementType="Argument">
                <stringProp name="Argument.name">Token</stringProp>
                <stringProp name="Argument.value">${Token}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RunCode" elementType="Argument">
                <stringProp name="Argument.name">RunCode</stringProp>
                <stringProp name="Argument.value">${RunCode}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CardId" elementType="Argument">
                <stringProp name="Argument.name">CardId</stringProp>
                <stringProp name="Argument.value">${CardId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="IMEI" elementType="Argument">
                <stringProp name="Argument.name">IMEI</stringProp>
                <stringProp name="Argument.value">${IMEI}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="MobileCode" elementType="Argument">
                <stringProp name="Argument.name">MobileCode</stringProp>
                <stringProp name="Argument.value">${MobileCode}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="DataArea" elementType="Argument">
                <stringProp name="Argument.name">DataArea</stringProp>
                <stringProp name="Argument.value">${DataArea}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleEncashCheckJkp</stringProp>
        </JavaSampler>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;*************验奖时传入的DataArea:&quot; + ${DataArea});</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言（返回码为300024）" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1407308130">&quot;310004&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言（中小奖）" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-26583794">&quot;WinStatus&quot;:&quot;2&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="7.1.2.3.兑奖" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipAndPort" elementType="Argument">
                <stringProp name="Argument.name">ipAndPort</stringProp>
                <stringProp name="Argument.value">${ipAndPort}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="agentSecretKey" elementType="Argument">
                <stringProp name="Argument.name">agentSecretKey</stringProp>
                <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="DES3" elementType="Argument">
                <stringProp name="Argument.name">DES3</stringProp>
                <stringProp name="Argument.value">${DES3}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PartnerId" elementType="Argument">
                <stringProp name="Argument.name">PartnerId</stringProp>
                <stringProp name="Argument.value">${PartnerId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TimeStamp" elementType="Argument">
                <stringProp name="Argument.name">TimeStamp</stringProp>
                <stringProp name="Argument.value">${TimeStamp}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SerialNum" elementType="Argument">
                <stringProp name="Argument.name">SerialNum</stringProp>
                <stringProp name="Argument.value">${SerialNum}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Version" elementType="Argument">
                <stringProp name="Argument.name">Version</stringProp>
                <stringProp name="Argument.value">${Version}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Token" elementType="Argument">
                <stringProp name="Argument.name">Token</stringProp>
                <stringProp name="Argument.value">${Token}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RunCode" elementType="Argument">
                <stringProp name="Argument.name">RunCode</stringProp>
                <stringProp name="Argument.value">${RunCode}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CardId" elementType="Argument">
                <stringProp name="Argument.name">CardId</stringProp>
                <stringProp name="Argument.value">${CardId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="IMEI" elementType="Argument">
                <stringProp name="Argument.name">IMEI</stringProp>
                <stringProp name="Argument.value">${IMEI}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="MobileCode" elementType="Argument">
                <stringProp name="Argument.name">MobileCode</stringProp>
                <stringProp name="Argument.value">${MobileCode}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="DataArea" elementType="Argument">
                <stringProp name="Argument.name">DataArea</stringProp>
                <stringProp name="Argument.value">${DataArea}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleEncashJkp</stringProp>
        </JavaSampler>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-1080805640">RunCode</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="9580194">
                <stringProp name="1278893468">${__Random(100000000,999999999,numberRandom)}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">log.info(&quot;*************兑奖时传入的DataArea:&quot; + ${DataArea});</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1435937374">&quot;300001&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="吉林（有BASE64）" enabled="false"/>
        <hashTree>
          <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">10.10.22.142</stringProp>
            <stringProp name="HTTPSampler.port">8189</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </ConfigTestElement>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="agentSecretKey" elementType="Argument">
                <stringProp name="Argument.name">agentSecretKey</stringProp>
                <stringProp name="Argument.value">&quot;CE268277ED19493BE3679B30&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">即开票商家密钥</stringProp>
              </elementProp>
              <elementProp name="DES3" elementType="Argument">
                <stringProp name="Argument.name">DES3</stringProp>
                <stringProp name="Argument.value">&quot;zhongxinyinhang123456789&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="agent_id" elementType="Argument">
                <stringProp name="Argument.name">agent_id</stringProp>
                <stringProp name="Argument.value">00001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="card_id" elementType="Argument">
                <stringProp name="Argument.name">card_id</stringProp>
                <stringProp name="Argument.value">&quot;511821193204198662&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="false">
            <collectionProp name="UserParameters.names">
              <stringProp name="-363932670">data_area</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-155000532">
                <stringProp name="472531867">&quot;G0161150400000001115DDNJFGRFMGKJEFMAAC003&quot;</stringProp>
              </collectionProp>
              <collectionProp name="-2044142927">
                <stringProp name="1421126842">&quot;G0161150400000001116EDNJFGRFMGKJEFNAAB002&quot;</stringProp>
              </collectionProp>
              <collectionProp name="475863037">
                <stringProp name="-182435144">&quot;G0161150400000001117FDNJFGRFMGKJEFPAAA001&quot;</stringProp>
              </collectionProp>
              <collectionProp name="623116140">
                <stringProp name="771701143">&quot;G0161150400000001118GDNJFGRFMGKJEFQAAF006&quot;</stringProp>
              </collectionProp>
              <collectionProp name="-1983602849">
                <stringProp name="1720296118">&quot;G0161150400000001119HDNJFGRFMGKJEFRAAE005&quot;</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="false">
            <collectionProp name="UserParameters.names">
              <stringProp name="-363932670">data_area</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-320026952">
                <stringProp name="212905143">&quot;G0480140850000001100ELKNPJRCGGHHJENAYS023&quot;</stringProp>
              </collectionProp>
              <collectionProp name="-1989805142">
                <stringProp name="2028039224">&quot;J046214134000000110500462152392390000002&quot;</stringProp>
              </collectionProp>
              <collectionProp name="922162668">
                <stringProp name="1720517051">&quot;J046214134000000110600462152402400000075&quot;</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="5.1.2.1.中奖查询" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.1.2.1.中奖查询" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="agent_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${agent_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">agent_id</stringProp>
                  </elementProp>
                  <elementProp name="param_content" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${param_content}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">param_content</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/access/comm/agent/winQuery.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="-363932670">data_area</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="1839701996">
                    <stringProp name="2052727582">&quot;G0480140850000046123MLKNPJRCGGJCJCMAES020&quot;</stringProp>
                  </collectionProp>
                  <collectionProp name="1574025200">
                    <stringProp name="-1006798938">&quot;J092714927000005014000927650670670000002&quot;</stringProp>
                  </collectionProp>
                  <collectionProp name="-1055108550">
                    <stringProp name="1145922598">&quot;G0512150440000002105KBMJGBNKHNCKJDKAAI047&quot;</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.sinodata.forJMeter.JsonJiaJieMi;
import net.sf.json.JSONObject;

JSONObject jo = new JSONObject();
jo.put(&quot;run_code&quot;,&quot;runcode&quot; + ${__Random(1,999,number)});
jo.put(&quot;card_id&quot;,${card_id});
jo.put(&quot;data_area&quot;,${data_area});

log.info(&quot;请求加密前：param_content=&quot;+jo.toString());

//对拼装后的参数值进行加密操作
JsonJiaJieMi jj = new JsonJiaJieMi(${agentSecretKey},${DES3});
String paramcontent;
try {
    param_content = jj.jiaMi(jo.toString());
}catch (Throwable ex) {
    log.error(&quot;Failed to do this or that&quot;, ex);
}

//将加密后获取到的字符串保存到JMeter变量中，供参数化使用
vars.put(&quot;param_content&quot;,param_content);
log.info(&quot;请求加密后：param_content=&quot;+param_content);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.sinodata.forJMeter.JsonJiaJieMi;
import net.sf.json.JSONObject;

//获取HTTP请求的响应内容
winQueryResponse = prev.getResponseDataAsString();
log.info(&quot;响应结果解密前:&quot; + winQueryResponse);

JsonJiaJieMi jj = new JsonJiaJieMi(${agentSecretKey},${DES3});
log.info(&quot;响应结果解密后:&quot; + jj.jieMi(winQueryResponse));

String winQuery_tradestatus = new JSONObject().fromObject(jj.jieMi(winQueryResponse)).getString(&quot;trade_status&quot;);
log.info(&quot;winQuery_tradestatus:&quot;+winQuery_tradestatus);
vars.put(&quot;winQuery_tradestatus&quot;,winQuery_tradestatus);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String str = vars.get(&quot;winQuery_tradestatus&quot;);
if(!&quot;300000&quot;.equals(str)){
	Failure = true;
	FailureMessage = &quot;中奖查询失败，失败返回码：&quot; + str;
}
</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="5.1.2.2.兑奖" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
              <stringProp name="filename">E:\jmeter_csv\t22jilin\bam_J0927_14927.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">data_area</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="false">
              <intProp name="groupSize">10</intProp>
              <longProp name="timeoutInMs">0</longProp>
            </SyncTimer>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.1.2.2.兑奖" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="agent_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${agent_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">agent_id</stringProp>
                  </elementProp>
                  <elementProp name="param_content" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${param_content}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">param_content</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/access/comm/agent/encashJkp.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="-363932670">data_area</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-1486726657">
                    <stringProp name="-428252855">&quot;J092714927000005014100927650680680000075&quot;</stringProp>
                  </collectionProp>
                  <collectionProp name="1466749306">
                    <stringProp name="-286111008">&quot;J046214134000000110100462152352350000075&quot;</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.sinodata.forJMeter.JsonJiaJieMi;
import net.sf.json.JSONObject;

JSONObject jo = new JSONObject();
jo.put(&quot;run_code&quot;,&quot;runcode&quot; + &quot;${__Random(100,999,number)}&quot; + &quot;${__time(HHmmss,hms)}&quot;);
jo.put(&quot;card_id&quot;,${card_id});
jo.put(&quot;data_area&quot;,${data_area});
log.info(&quot;请求加密前：param_content=&quot;+jo.toString());

//对拼装后的参数值进行加密操作
JsonJiaJieMi jj = new JsonJiaJieMi(${agentSecretKey},${DES3});
String paramcontent;
try {
    param_content = jj.jiaMi(jo.toString());
}catch (Throwable ex) {
    log.error(&quot;Failed to do this or that&quot;, ex);
}

//将加密后获取到的字符串保存到JMeter变量中，供参数化使用
vars.put(&quot;param_content&quot;,param_content);
log.info(&quot;param_content=&quot;+param_content);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.sinodata.forJMeter.JsonJiaJieMi;
import net.sf.json.JSONObject;

//获取HTTP请求的响应内容
encashJkpResponse = prev.getResponseDataAsString();
log.info(&quot;响应结果解密前：&quot; + encashJkpResponse);

JsonJiaJieMi jj = new JsonJiaJieMi(${agentSecretKey},${DES3});
log.info(&quot;响应结果解密后：&quot; + jj.jieMi(encashJkpResponse));

String encashJkp_tradestatus = new JSONObject().fromObject(jj.jieMi(encashJkpResponse)).getString(&quot;trade_status&quot;);

log.info(&quot;encashJkp_tradestatus:&quot;+encashJkp_tradestatus);
vars.put(&quot;encashJkp_tradestatus&quot;,encashJkp_tradestatus);
if(&quot;300001&quot;.equals(encashJkp_tradestatus)){
	String encashJkp_encash_money = new JSONObject().fromObject(jj.jieMi(encashJkpResponse)).getString(&quot;encash_money&quot;);
	log.info(&quot;encashJkp_encash_money:&quot;+encashJkp_encash_money);
	vars.put(&quot;encashJkp_encash_money&quot;,encashJkp_encash_money);
}
</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String str = vars.get(&quot;encashJkp_tradestatus&quot;);
if(vars.get(&quot;encashJkp_encash_money&quot;) == null){
	Failure = true;
	FailureMessage = &quot;兑奖失败，返回码：&quot; + str;
}else{
	String encash_money_str = vars.get(&quot;encashJkp_encash_money&quot;);
	log.info(&quot;encash_money_str&quot; + encash_money_str);
	int encash_money = Integer.parseInt(encash_money_str);
	if(encash_money == 0){
		Failure = true;
		FailureMessage = &quot;兑奖失败，返回码：&quot; + str + &quot;，兑奖金额：&quot; + encash_money;
	}
	vars.put(&quot;encashJkp_encash_money&quot;,null);
}
</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="false">
                <collectionProp name="UserParameters.names">
                  <stringProp name="-363932670">data_area</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-1993769016">
                    <stringProp name="895066228">&quot;G0147100630007804100ACPGPANAMMKPRMPQRW035&quot;</stringProp>
                  </collectionProp>
                  <collectionProp name="-927132052">
                    <stringProp name="1732633385">&quot;G0147100630007802100ABNCALGQCLKRFDPHRW035&quot;</stringProp>
                  </collectionProp>
                  <collectionProp name="216603872">
                    <stringProp name="1088816596">&quot;G0147100630007803100ACDJGEHCNDJFKAPFPX029&quot;</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="false">
              <stringProp name="ConstantTimer.delay">300</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="5.1.2.3.验奖查询" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.1.2.3.验奖查询" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="agent_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${agent_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">agent_id</stringProp>
                  </elementProp>
                  <elementProp name="param_content" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${param_content}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">param_content</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/access/comm/agent/encashCheckJkp.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="-363932670">data_area</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="1839701996">
                    <stringProp name="2052727582">&quot;G0480140850000046123MLKNPJRCGGJCJCMAES020&quot;</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.sinodata.forJMeter.JsonJiaJieMi;
import net.sf.json.JSONObject;

JSONObject jo = new JSONObject();
jo.put(&quot;run_code&quot;,&quot;runcode&quot; + ${__Random(1,999,number)});
jo.put(&quot;card_id&quot;,${card_id});
jo.put(&quot;data_area&quot;,${data_area});

//对拼装后的参数值进行加密操作
JsonJiaJieMi jj = new JsonJiaJieMi(${agentSecretKey},${DES3});
String paramcontent;
try {
    param_content = jj.jiaMi(jo.toString());
}catch (Throwable ex) {
    log.error(&quot;Failed to do this or that&quot;, ex);
}

//将加密后获取到的字符串保存到JMeter变量中，供参数化使用
vars.put(&quot;param_content&quot;,param_content);
log.info(&quot;param_content=&quot;+param_content);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.sinodata.forJMeter.JsonJiaJieMi;
import net.sf.json.JSONObject;

//获取HTTP请求的响应内容
encashCheckJkpResponse = prev.getResponseDataAsString();
//log.info(&quot;响应结果：：：：：：：：：：&quot; + encashCheckJkpResponse);

JsonJiaJieMi jj = new JsonJiaJieMi(${agentSecretKey},${DES3});
String encashCheckJkpResponseDecrypt = jj.jieMi(encashCheckJkpResponse);
log.info(&quot;响应结果解密后：&quot; + encashCheckJkpResponseDecrypt);
String encashCheckJkp_tradestatus = new JSONObject().fromObject(encashCheckJkpResponseDecrypt).getString(&quot;trade_status&quot;);
log.info(&quot;encashCheckJkp_tradestatus:&quot;+encashCheckJkp_tradestatus);
vars.put(&quot;encashCheckJkp_tradestatus&quot;,encashCheckJkp_tradestatus);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String str = vars.get(&quot;encashCheckJkp_tradestatus&quot;);
if(!&quot;300027&quot;.equals(str)){
	Failure = true;
	FailureMessage = &quot;验奖查询失败，失败返回码：&quot; + str;
}
</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="false">
              <stringProp name="ConstantTimer.delay">300</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="5.1.2.4.原票查询" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.1.2.4.原票查询" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="agent_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${agent_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">agent_id</stringProp>
                  </elementProp>
                  <elementProp name="param_content" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${param_content}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">param_content</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/access/comm/agent/queryTicket.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="-363932670">data_area</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="1839701996">
                    <stringProp name="2052727582">&quot;G0480140850000046123MLKNPJRCGGJCJCMAES020&quot;</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.sinodata.forJMeter.JsonJiaJieMi;
import net.sf.json.JSONObject;

JSONObject jo = new JSONObject();
jo.put(&quot;run_code&quot;,&quot;runcode&quot; + ${__Random(1,999,number)});
jo.put(&quot;card_id&quot;,${card_id});
jo.put(&quot;data_area&quot;,${data_area});

//对拼装后的参数值进行加密操作
JsonJiaJieMi jj = new JsonJiaJieMi(${agentSecretKey},${DES3});
log.info(&quot;**************请求加密前param_content=&quot; + jo.toString());
String paramcontent;
try {
    param_content = jj.jiaMi(jo.toString());
}catch (Throwable ex) {
    log.error(&quot;Failed to do this or that&quot;, ex);
}

//将加密后获取到的字符串保存到JMeter变量中，供参数化使用
vars.put(&quot;param_content&quot;,param_content);
log.info(&quot;param_content=&quot;+param_content);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.sinodata.forJMeter.JsonJiaJieMi;
import net.sf.json.JSONObject;

//获取HTTP请求的响应内容
queryTicketResponse = prev.getResponseDataAsString();
//log.info(&quot;响应结果解密前：&quot; + queryTicketResponse);

JsonJiaJieMi jj = new JsonJiaJieMi(${agentSecretKey},${DES3});
log.info(&quot;响应结果解密后：&quot; + jj.jieMi(queryTicketResponse));
String queryTicket_tradestatus = new JSONObject().fromObject(jj.jieMi(queryTicketResponse)).getString(&quot;trade_status&quot;);
log.info(&quot;queryTicket_tradestatus:&quot;+queryTicket_tradestatus);
vars.put(&quot;queryTicket_tradestatus&quot;,queryTicket_tradestatus);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String str = vars.get(&quot;queryTicket_tradestatus&quot;);
if(!&quot;300028&quot;.equals(str)){
	Failure = true;
	FailureMessage = &quot;原票查询失败，失败返回码：&quot; + str;
}
</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
              <stringProp name="ConstantTimer.delay">300</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="5.1.2.5.站点转账" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.1.2.5.站点转账" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="agent_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${agent_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">agent_id</stringProp>
                  </elementProp>
                  <elementProp name="param_content" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${param_content}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">param_content</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/access/comm/agent/stationMoney.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="false">
                <collectionProp name="UserParameters.names">
                  <stringProp name="-98470906">station_id</stringProp>
                  <stringProp name="-1365710671">payment_amount</stringProp>
                  <stringProp name="-497431993">payment_date</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-1708743290">
                    <stringProp name="1582864191">&quot;12010021&quot;</stringProp>
                    <stringProp name="32907154">&quot;101&quot;</stringProp>
                    <stringProp name="-712214630">&quot;2016-12-15&quot;</stringProp>
                  </collectionProp>
                  <collectionProp name="1778858551">
                    <stringProp name="1582863292">&quot;12010013&quot;</stringProp>
                    <stringProp name="1021044864">&quot;2002&quot;</stringProp>
                    <stringProp name="-712215591">&quot;2016-12-05&quot;</stringProp>
                  </collectionProp>
                  <collectionProp name="249903819">
                    <stringProp name="1582863323">&quot;12010014&quot;</stringProp>
                    <stringProp name="1558989107">&quot;10000&quot;</stringProp>
                    <stringProp name="-712215591">&quot;2016-12-05&quot;</stringProp>
                  </collectionProp>
                  <collectionProp name="499113424">
                    <stringProp name="1582862269">&quot;12010001&quot;</stringProp>
                    <stringProp name="32907247">&quot;104&quot;</stringProp>
                    <stringProp name="-712215591">&quot;2016-12-05&quot;</stringProp>
                  </collectionProp>
                  <collectionProp name="259067596">
                    <stringProp name="1582863354">&quot;12010015&quot;</stringProp>
                    <stringProp name="33026287">&quot;500&quot;</stringProp>
                    <stringProp name="-712215591">&quot;2016-12-05&quot;</stringProp>
                  </collectionProp>
                  <collectionProp name="-856007213">
                    <stringProp name="1582863385">&quot;12010016&quot;</stringProp>
                    <stringProp name="33056078">&quot;600&quot;</stringProp>
                    <stringProp name="-712215591">&quot;2016-12-05&quot;</stringProp>
                  </collectionProp>
                  <collectionProp name="-1971082022">
                    <stringProp name="1582863416">&quot;12010017&quot;</stringProp>
                    <stringProp name="33085869">&quot;700&quot;</stringProp>
                    <stringProp name="-712215591">&quot;2016-12-05&quot;</stringProp>
                  </collectionProp>
                  <collectionProp name="1978848399">
                    <stringProp name="1582863447">&quot;12010018&quot;</stringProp>
                    <stringProp name="33115660">&quot;800&quot;</stringProp>
                    <stringProp name="-712215591">&quot;2016-12-05&quot;</stringProp>
                  </collectionProp>
                  <collectionProp name="863773590">
                    <stringProp name="1582863478">&quot;12010019&quot;</stringProp>
                    <stringProp name="33145451">&quot;900&quot;</stringProp>
                    <stringProp name="-712215591">&quot;2016-12-05&quot;</stringProp>
                  </collectionProp>
                  <collectionProp name="-1036397039">
                    <stringProp name="1582864160">&quot;12010020&quot;</stringProp>
                    <stringProp name="1020121281">&quot;1000&quot;</stringProp>
                    <stringProp name="-712215591">&quot;2016-12-05&quot;</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数——备份" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="-98470906">station_id</stringProp>
                  <stringProp name="-1365710671">payment_amount</stringProp>
                  <stringProp name="-497431993">payment_date</stringProp>
                  <stringProp name="-496947866">payment_time</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-1544497260">
                    <stringProp name="-222745152">&quot;22012001&quot;</stringProp>
                    <stringProp name="1227168284">&quot;150000&quot;</stringProp>
                    <stringProp name="1030597503">&quot;2017-12-31&quot;</stringProp>
                    <stringProp name="1775912639">&quot;23:01:01&quot;</stringProp>
                  </collectionProp>
                  <collectionProp name="-989770985">
                    <stringProp name="-224592163">&quot;22010002&quot;</stringProp>
                    <stringProp name="1021044864">&quot;2002&quot;</stringProp>
                    <stringProp name="1002889207">&quot;2017-03-08&quot;</stringProp>
                    <stringProp name="-711600194">&quot;13:01:01&quot;</stringProp>
                  </collectionProp>
                  <collectionProp name="1051666329">
                    <stringProp name="-224592194">&quot;22010001&quot;</stringProp>
                    <stringProp name="1558989107">&quot;10000&quot;</stringProp>
                    <stringProp name="1002889207">&quot;2017-03-08&quot;</stringProp>
                    <stringProp name="1031210141">&quot;14:01:01&quot;</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.sinodata.forJMeter.JsonJiaJieMi;
import net.sf.json.JSONObject;
import com.sinodata.forJMeter.UtilsList;

String runcode = &quot;${__Random(10000,99999,RandomRunCode)}&quot; + &quot;${__Random(10000,99999,RandomRunCode)}&quot; + &quot;${__Random(10000,99999,RandomRunCode)}&quot; + &quot;${__Random(10000,99999,RandomRunCode)}&quot;;
//log.info(&quot;*************runcode:&quot; + runcode);

JSONObject jo = new JSONObject();
jo.put(&quot;run_code&quot;,runcode);
jo.put(&quot;station_id&quot;,${station_id});
jo.put(&quot;payment_amount&quot;,${payment_amount});
jo.put(&quot;payment_date&quot;,${payment_date});
//jo.put(&quot;payment_time&quot;,${payment_time});
//jo.put(&quot;payment_date&quot;,${__time(yyyy-mm-dd,ymd)});
payment_time = &quot;${__time(HH:mm:ss,hms)}&quot;;
//log.info(&quot;*********************************&quot; + &quot;${__time(HH:mm:ss,hms)}&quot;);
jo.put(&quot;payment_time&quot;,payment_time);

StringBuffer sb = new StringBuffer();
sb.append(runcode).append(&quot;|&quot;).append(${station_id}).append(&quot;|&quot;).append(${payment_amount}).append(&quot;|&quot;).append(${payment_date}).append(&quot;|&quot;).append(payment_time).append(&quot;|&quot;);
//log.info(&quot;*************&quot;+sb.toString());
String check_code = new UtilsList().getCheckCode(sb.toString());
jo.put(&quot;check_code&quot;,check_code);
//log.info(check_code);

//对拼装后的参数值进行加密操作
JsonJiaJieMi jj = new JsonJiaJieMi(${agentSecretKey},${DES3});
String paramcontent;
try {
    param_content = jj.jiaMi(jo.toString());
}catch (Throwable ex) {
    log.error(&quot;Failed to do this or that&quot;, ex);
}

//将加密后获取到的字符串保存到JMeter变量中，供参数化使用
vars.put(&quot;param_content&quot;,param_content);
//log.info(&quot;param_content=&quot;+param_content);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.sinodata.forJMeter.JsonJiaJieMi;
import net.sf.json.JSONObject;

//获取HTTP请求的响应内容
stationMoneyResponse = prev.getResponseDataAsString();
//log.info(&quot;响应结果解密前：&quot; + stationMoneyResponse);

JsonJiaJieMi jj = new JsonJiaJieMi(${agentSecretKey},${DES3});
log.info(&quot;响应结果解密后：&quot; + jj.jieMi(stationMoneyResponse));
String stationMoney_tradestatus = new JSONObject().fromObject(jj.jieMi(stationMoneyResponse)).getString(&quot;trade_status&quot;);
log.info(&quot;stationMoney_tradestatus:&quot;+stationMoney_tradestatus);
vars.put(&quot;stationMoney_tradestatus&quot;,stationMoney_tradestatus);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String str = vars.get(&quot;stationMoney_tradestatus&quot;);
if(!&quot;300029&quot;.equals(str)){
	Failure = true;
	FailureMessage = &quot;站点转账失败，失败返回码：&quot; + str;
}
</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="5.1.2.6.站点转账查询" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
              <stringProp name="filename">E:\jmeter_csv\t22jilin\jdbc.txt</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">station_id,run_code</stringProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
            </CSVDataSet>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="false">
              <stringProp name="ConstantTimer.delay">3000</stringProp>
            </ConstantTimer>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.1.2.6.站点转账查询" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="agent_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${agent_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">agent_id</stringProp>
                  </elementProp>
                  <elementProp name="param_content" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${param_content}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">param_content</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/access/comm/agent/stationMoneyQue.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.implementation">Java</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="-98470906">station_id</stringProp>
                  <stringProp name="815631137">run_code</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="1660383858">
                    <stringProp name="-207355966">22010001</stringProp>
                    <stringProp name="2023491395">58902909394161997530</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.sinodata.forJMeter.JsonJiaJieMi;
import net.sf.json.JSONObject;
import com.sinodata.forJMeter.UtilsList;

//result = vars.getObject(&quot;RVN&quot;);

JSONObject jo = new JSONObject();
jo.put(&quot;run_code&quot;, &quot;${run_code}&quot;);
jo.put(&quot;station_id&quot;,&quot;${station_id}&quot;);
log.info(&quot;请求加密前：param_content=&quot;+jo.toString());

//对拼装后的参数值进行加密操作
JsonJiaJieMi jj = new JsonJiaJieMi(${agentSecretKey},${DES3});
String paramcontent;
try {
    param_content = jj.jiaMi(jo.toString());
}catch (Throwable ex) {
    log.error(&quot;Failed to do this or that&quot;, ex);
}

//将加密后获取到的字符串保存到JMeter变量中，供参数化使用
vars.put(&quot;param_content&quot;,param_content);
log.info(&quot;请求加密后：param_content=&quot;+param_content);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.sinodata.forJMeter.JsonJiaJieMi;
import net.sf.json.JSONObject;

//获取HTTP请求的响应内容
stationMoneyQueResponse = prev.getResponseDataAsString();
log.info(&quot;响应结果解密前：&quot; + stationMoneyQueResponse);

JsonJiaJieMi jj = new JsonJiaJieMi(${agentSecretKey},${DES3});
log.info(&quot;响应结果解密后：&quot; + jj.jieMi(stationMoneyQueResponse));
String stationMoneyQue_tradestatus = new JSONObject().fromObject(jj.jieMi(stationMoneyQueResponse)).getString(&quot;trade_status&quot;);
log.info(&quot;stationMoneyQue_tradestatus:&quot;+stationMoneyQue_tradestatus);
vars.put(&quot;stationMoneyQue_tradestatus&quot;,stationMoneyQue_tradestatus);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String str = vars.get(&quot;stationMoneyQue_tradestatus&quot;);
if(!&quot;300038&quot;.equals(str)){
	Failure = true;
	FailureMessage = &quot;站点转账查询失败，失败返回码：&quot; + str;
}
</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="5.1.2.7.站点查询" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.1.2.7.站点查询" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="agent_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${agent_id}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">agent_id</stringProp>
                  </elementProp>
                  <elementProp name="param_content" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${param_content}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">param_content</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/access/comm/agent/stationQuery.action</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="-98470906">station_id</stringProp>
                  <stringProp name="815631137">run_code</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-796563964">
                    <stringProp name="-167333892">&quot;22030001&quot;</stringProp>
                    <stringProp name="582684810">&quot;12345678901234567890&quot;</stringProp>
                  </collectionProp>
                  <collectionProp name="-1466714989">
                    <stringProp name="-223668611">&quot;22011003&quot;</stringProp>
                    <stringProp name="582684841">&quot;12345678901234567891&quot;</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.sinodata.forJMeter.JsonJiaJieMi;
import net.sf.json.JSONObject;
import com.sinodata.forJMeter.UtilsList;

JSONObject jo = new JSONObject();
//jo.put(&quot;station_id&quot;, &quot;&quot;);
jo.put(&quot;station_id&quot;,${station_id});
//jo.put(&quot;run_code&quot;, ${run_code});
String runcode = &quot;${__Random(10000,99999,RandomRunCode)}&quot; + &quot;${__Random(10000,99999,RandomRunCode)}&quot; + &quot;${__Random(10000,99999,RandomRunCode)}&quot; + &quot;${__Random(10000,99999,RandomRunCode)}&quot;;
jo.put(&quot;run_code&quot;, runcode);
log.info(&quot;请求加密前：param_content=&quot;+jo.toString());

//对拼装后的参数值进行加密操作
JsonJiaJieMi jj = new JsonJiaJieMi(${agentSecretKey},${DES3});
log.info(&quot;agentSecretKey========&quot;+ ${agentSecretKey});
String paramcontent;
try {
    param_content = jj.jiaMi(jo.toString());
}catch (Throwable ex) {
    log.error(&quot;Failed to do this or that&quot;, ex);
}

//将加密后获取到的字符串保存到JMeter变量中，供参数化使用
vars.put(&quot;param_content&quot;,param_content);
log.info(&quot;请求加密后：param_content=&quot;+param_content);</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.sinodata.forJMeter.JsonJiaJieMi;
import net.sf.json.JSONObject;

//获取HTTP请求的响应内容
stationQueryResponse = prev.getResponseDataAsString();
log.info(&quot;响应结果解密前：&quot; + stationQueryResponse);

JsonJiaJieMi jj = new JsonJiaJieMi(${agentSecretKey},${DES3});
log.info(&quot;响应结果解密后：&quot; + jj.jieMi(stationQueryResponse));
String stationQuery_tradestatus = new JSONObject().fromObject(jj.jieMi(stationQueryResponse)).getString(&quot;trade_status&quot;);
log.info(&quot;stationQuery_tradestatus:&quot;+stationQuery_tradestatus);
vars.put(&quot;stationQuery_tradestatus&quot;,stationQuery_tradestatus);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String str = vars.get(&quot;stationQuery_tradestatus&quot;);
if(!&quot;300042&quot;.equals(str)){
	Failure = true;
	FailureMessage = &quot;站点查询失败，失败返回码：&quot; + str +&quot;，站点未开通即开票业务。&quot;;
}
</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="江苏（无BASE64）" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="仅一次控制器" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="7.1.2.1.身份验证" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ipAndPort" elementType="Argument">
                    <stringProp name="Argument.name">ipAndPort</stringProp>
                    <stringProp name="Argument.value">${ipAndPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="agentSecretKey" elementType="Argument">
                    <stringProp name="Argument.name">agentSecretKey</stringProp>
                    <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="DES3" elementType="Argument">
                    <stringProp name="Argument.name">DES3</stringProp>
                    <stringProp name="Argument.value">${DES3}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="PartnerId" elementType="Argument">
                    <stringProp name="Argument.name">PartnerId</stringProp>
                    <stringProp name="Argument.value">${PartnerId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="TimeStamp" elementType="Argument">
                    <stringProp name="Argument.name">TimeStamp</stringProp>
                    <stringProp name="Argument.value">${TimeStamp}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="SerialNum" elementType="Argument">
                    <stringProp name="Argument.name">SerialNum</stringProp>
                    <stringProp name="Argument.value">${SerialNum}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Version" elementType="Argument">
                    <stringProp name="Argument.name">Version</stringProp>
                    <stringProp name="Argument.value">${Version}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Sign" elementType="Argument">
                    <stringProp name="Argument.name">Sign</stringProp>
                    <stringProp name="Argument.value">${Sign}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleAuth</stringProp>
            </JavaSampler>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import net.sf.json.JSONObject;

//获取请求响应内容
String response = prev.getResponseDataAsString();
log.info(&quot;===================response:&quot; + response);
if(!&quot;&quot;.equals(response)){
	JSONObject jo = JSONObject.fromObject(response);
	//获取解密后响应内容的Token值
	if(jo.has(&quot;RespContent&quot;)){
		RespContent = new JSONObject().fromObject(response).getString(&quot;RespContent&quot;);
		Token = new JSONObject().fromObject(RespContent).getString(&quot;Token&quot;);
		vars.put(&quot;Token&quot;,Token);
		log.info(&quot;***************************Token：&quot; + Token);
	}else{
		log.info(&quot;****************响应Token为空****************&quot;);
		vars.put(&quot;Token&quot;,&quot;NULL&quot;);
	}
}else{
	log.info(&quot;****************响应response为空****************&quot;);
}

</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言（返回310003）" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1407308161">&quot;310003&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="深圳（无BASE64）" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">8</stringProp>
        </LoopController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipAndPort" elementType="Argument">
                <stringProp name="Argument.name">ipAndPort</stringProp>
                <stringProp name="Argument.value">10.10.83.142:8189</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="DES3" elementType="Argument">
                <stringProp name="Argument.name">DES3</stringProp>
                <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="agentSecretKey" elementType="Argument">
                <stringProp name="Argument.name">agentSecretKey</stringProp>
                <stringProp name="Argument.value">0FD2672D2A5A5C4DA5200003</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">CE268277ED19493BE3679B30,0FD2672D2A5A5C4DA5200003,F123EC930D7F2DA25433F29C</stringProp>
              </elementProp>
              <elementProp name="PartnerId" elementType="Argument">
                <stringProp name="Argument.name">PartnerId</stringProp>
                <stringProp name="Argument.value">00003</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">00001,00003,00004</stringProp>
              </elementProp>
              <elementProp name="Sign" elementType="Argument">
                <stringProp name="Argument.name">Sign</stringProp>
                <stringProp name="Argument.value">SIKnEgpRix0lXhfXheMqGyZpHqEkojI8V8zTTHfwVl6hklyb2tK99En4ZHlH/hz2UFbV8KR5vrA+pd6XTi5Ujd2ilkbjgSRATCvUg3WcNoQaAsyXYnsFVqbljBV0EAmgRSHGGp3yZBew8t/lM2Hf92VjjvoKpIURdbCICctVK8I=</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TimeStamp" elementType="Argument">
                <stringProp name="Argument.name">TimeStamp</stringProp>
                <stringProp name="Argument.value">2016-10-24 15:10:10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SerialNum" elementType="Argument">
                <stringProp name="Argument.name">SerialNum</stringProp>
                <stringProp name="Argument.value">1234567</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Version" elementType="Argument">
                <stringProp name="Argument.name">Version</stringProp>
                <stringProp name="Argument.value">1.0.0.0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="RunCode" elementType="Argument">
                <stringProp name="Argument.name">RunCode</stringProp>
                <stringProp name="Argument.value">&quot;1234567890123456789&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="CardId" elementType="Argument">
                <stringProp name="Argument.name">CardId</stringProp>
                <stringProp name="Argument.value">&quot;150404195109259802&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="IMEI" elementType="Argument">
                <stringProp name="Argument.name">IMEI</stringProp>
                <stringProp name="Argument.value">&quot;123456789012345&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="MobileCode" elementType="Argument">
                <stringProp name="Argument.name">MobileCode</stringProp>
                <stringProp name="Argument.value">&quot;13723780321&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="DataArea" elementType="Argument">
                <stringProp name="Argument.name">DataArea</stringProp>
                <stringProp name="Argument.value">&quot;G0218140060000003150GAGRPDLKDKFCEEQAWW010&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Token" elementType="Argument">
                <stringProp name="Argument.name">Token</stringProp>
                <stringProp name="Argument.value">&quot;token1234567890&quot;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">E:\jmeter_csv\t83shenzhen\G0218_14006.txt</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">DataArea</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="仅一次控制器" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="7.1.2.1.身份验证" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ipAndPort" elementType="Argument">
                    <stringProp name="Argument.name">ipAndPort</stringProp>
                    <stringProp name="Argument.value">${ipAndPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="agentSecretKey" elementType="Argument">
                    <stringProp name="Argument.name">agentSecretKey</stringProp>
                    <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="DES3" elementType="Argument">
                    <stringProp name="Argument.name">DES3</stringProp>
                    <stringProp name="Argument.value">${DES3}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="PartnerId" elementType="Argument">
                    <stringProp name="Argument.name">PartnerId</stringProp>
                    <stringProp name="Argument.value">${PartnerId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="TimeStamp" elementType="Argument">
                    <stringProp name="Argument.name">TimeStamp</stringProp>
                    <stringProp name="Argument.value">${TimeStamp}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="SerialNum" elementType="Argument">
                    <stringProp name="Argument.name">SerialNum</stringProp>
                    <stringProp name="Argument.value">${SerialNum}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Version" elementType="Argument">
                    <stringProp name="Argument.name">Version</stringProp>
                    <stringProp name="Argument.value">${Version}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Sign" elementType="Argument">
                    <stringProp name="Argument.name">Sign</stringProp>
                    <stringProp name="Argument.value">${Sign}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleAuth</stringProp>
            </JavaSampler>
            <hashTree>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="false">
                <collectionProp name="UserParameters.names">
                  <stringProp name="208335843">PartnerId</stringProp>
                  <stringProp name="-1950315510">agentSecretKey</stringProp>
                  <stringProp name="2576861">Sign</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-2133575796">
                    <stringProp name="45806643">00003</stringProp>
                    <stringProp name="110931621">0FD2672D2A5A5C4DA5200003</stringProp>
                    <stringProp name="-890850763">xjlMBEIWxDE6xh3zn7hWNaD+/L870pxw1Okx9X/xrmcVUhOjnz7w80CYWRIWr2u4Jxto13ntmKEFperruvEbN2JBwNvNCTTJVnP20kpYIjqKk7rPu7Ko6X/bia90vK/E4CiKjG+MtgN4ODfsF0WuqUxv8scmjug+ILuYHznnSV0=</stringProp>
                  </collectionProp>
                  <collectionProp name="212723359">
                    <stringProp name="45806644">00004</stringProp>
                    <stringProp name="110931622">0FD2672D2A5A5C4DA5200004</stringProp>
                    <stringProp name="1404070582">38zfcELlpoemrQRoo0C4kDFGldJ6/KG1aXYrnODqGDCaYO8tgD181+iR7O7CTYGlPyyXjlc5uwwk9gZ/mvngeYiTDzTmNGN5AsddiX4fs+kXoWUM5BEst++cF6yYRmdCVqCyqnCNs2oa2F1n7HqPnHWqi/xZNsfdEwRF6ShL5II=</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import net.sf.json.JSONObject;

//获取请求响应内容
String response = prev.getResponseDataAsString();
log.info(&quot;===================response:&quot; + response);
if(!&quot;&quot;.equals(response)){
	JSONObject jo = JSONObject.fromObject(response);
	//获取解密后响应内容的Token值
	if(jo.has(&quot;RespContent&quot;)){
		RespContent = new JSONObject().fromObject(response).getString(&quot;RespContent&quot;);
		Token = new JSONObject().fromObject(RespContent).getString(&quot;Token&quot;);
		vars.put(&quot;Token&quot;,Token);
		log.info(&quot;***************************Token：&quot; + Token);
	}else{
		log.info(&quot;****************响应Token为空****************&quot;);
		vars.put(&quot;Token&quot;,&quot;NULL&quot;);
	}
}else{
	log.info(&quot;****************响应response为空****************&quot;);
}

</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言（返回310003）" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1407308161">&quot;310003&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="false">
            <intProp name="groupSize">2</intProp>
            <longProp name="timeoutInMs">0</longProp>
          </SyncTimer>
          <hashTree/>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="7.1.2.2.验奖查询" enabled="true">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">${Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RunCode" elementType="Argument">
                  <stringProp name="Argument.name">RunCode</stringProp>
                  <stringProp name="Argument.value">${RunCode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="CardId" elementType="Argument">
                  <stringProp name="Argument.name">CardId</stringProp>
                  <stringProp name="Argument.value">${CardId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="IMEI" elementType="Argument">
                  <stringProp name="Argument.name">IMEI</stringProp>
                  <stringProp name="Argument.value">${IMEI}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="MobileCode" elementType="Argument">
                  <stringProp name="Argument.name">MobileCode</stringProp>
                  <stringProp name="Argument.value">${MobileCode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DataArea" elementType="Argument">
                  <stringProp name="Argument.name">DataArea</stringProp>
                  <stringProp name="Argument.value">${DataArea}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleEncashCheckJkp</stringProp>
          </JavaSampler>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">log.info(&quot;*************验奖时传入的DataArea:&quot; + ${DataArea});</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言（返回码为310004）" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1407308130">&quot;310004&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言（中小奖）" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-26583794">&quot;WinStatus&quot;:&quot;2&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="7.1.2.3.兑奖" enabled="true">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">${ipAndPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">${agentSecretKey}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">${DES3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">${PartnerId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">${TimeStamp}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">${SerialNum}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">${Version}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">${Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RunCode" elementType="Argument">
                  <stringProp name="Argument.name">RunCode</stringProp>
                  <stringProp name="Argument.value">${RunCode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="CardId" elementType="Argument">
                  <stringProp name="Argument.name">CardId</stringProp>
                  <stringProp name="Argument.value">${CardId}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="IMEI" elementType="Argument">
                  <stringProp name="Argument.name">IMEI</stringProp>
                  <stringProp name="Argument.value">${IMEI}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="MobileCode" elementType="Argument">
                  <stringProp name="Argument.name">MobileCode</stringProp>
                  <stringProp name="Argument.value">${MobileCode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DataArea" elementType="Argument">
                  <stringProp name="Argument.name">DataArea</stringProp>
                  <stringProp name="Argument.value">${DataArea}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleEncashJkp</stringProp>
          </JavaSampler>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-1080805640">RunCode</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="9580194">
                  <stringProp name="1278893468">${__Random(100000000,999999999,numberRandom)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">log.info(&quot;*************兑奖时传入的DataArea:&quot; + ${DataArea});</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1435937374">&quot;300001&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="false">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="接入平台线程组（使用JAVA请求）备用" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1481320108000</longProp>
        <longProp name="ThreadGroup.end_time">1481320108000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="身份验证" enabled="false">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipAndPort" elementType="Argument">
                <stringProp name="Argument.name">ipAndPort</stringProp>
                <stringProp name="Argument.value">10.10.37.148:8189</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="agentSecretKey" elementType="Argument">
                <stringProp name="Argument.name">agentSecretKey</stringProp>
                <stringProp name="Argument.value">S734B7E634E78EBB9A467B0E</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="DES3" elementType="Argument">
                <stringProp name="Argument.name">DES3</stringProp>
                <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PartnerId" elementType="Argument">
                <stringProp name="Argument.name">PartnerId</stringProp>
                <stringProp name="Argument.value">20001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TimeStamp" elementType="Argument">
                <stringProp name="Argument.name">TimeStamp</stringProp>
                <stringProp name="Argument.value">2016-10-24 15:10:10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SerialNum" elementType="Argument">
                <stringProp name="Argument.name">SerialNum</stringProp>
                <stringProp name="Argument.value">1234567</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Version" elementType="Argument">
                <stringProp name="Argument.name">Version</stringProp>
                <stringProp name="Argument.value">1.0.0.0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Sign" elementType="Argument">
                <stringProp name="Argument.name">Sign</stringProp>
                <stringProp name="Argument.value">38zfcELlpoemrQRoo0C4kDFGldJ6/KG1aXYrnODqGDCaYO8tgD181+iR7O7CTYGlPyyXjlc5uwwk9gZ/mvngeYiTDzTmNGN5AsddiX4fs+kXoWUM5BEst++cF6yYRmdCVqCyqnCNs2oa2F1n7HqPnHWqi/xZNsfdEwRF6ShL5II=</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleAuth</stringProp>
        </JavaSampler>
        <hashTree>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import net.sf.json.JSONObject;

//获取请求响应内容
String response = prev.getResponseDataAsString();
log.info(&quot;===================response:&quot; + response);
if(!&quot;&quot;.equals(response)){
	JSONObject jo = JSONObject.fromObject(response);
	//获取解密后响应内容的Token值
	if(jo.has(&quot;RespContent&quot;)){
		RespContent = new JSONObject().fromObject(response).getString(&quot;RespContent&quot;);
		Token = new JSONObject().fromObject(RespContent).getString(&quot;Token&quot;);
		vars.put(&quot;Token&quot;,Token);
		log.info(&quot;***************************&quot; + Token);
	}else{
		log.info(&quot;****************响应Token为空****************&quot;);
		vars.put(&quot;Token&quot;,&quot;NULL&quot;);
	}
}else{
	log.info(&quot;****************响应response为空****************&quot;);
}

</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="查询开奖公告" enabled="false">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipAndPort" elementType="Argument">
                <stringProp name="Argument.name">ipAndPort</stringProp>
                <stringProp name="Argument.value">10.10.37.148:8189</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="agentSecretKey" elementType="Argument">
                <stringProp name="Argument.name">agentSecretKey</stringProp>
                <stringProp name="Argument.value">S734B7E634E78EBB9A467B0E</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="DES3" elementType="Argument">
                <stringProp name="Argument.name">DES3</stringProp>
                <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PartnerId" elementType="Argument">
                <stringProp name="Argument.name">PartnerId</stringProp>
                <stringProp name="Argument.value">20001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TimeStamp" elementType="Argument">
                <stringProp name="Argument.name">TimeStamp</stringProp>
                <stringProp name="Argument.value">2016-10-24 15:10:10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SerialNum" elementType="Argument">
                <stringProp name="Argument.name">SerialNum</stringProp>
                <stringProp name="Argument.value">1234567</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Version" elementType="Argument">
                <stringProp name="Argument.name">Version</stringProp>
                <stringProp name="Argument.value">1.0.0.0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Token" elementType="Argument">
                <stringProp name="Argument.name">Token</stringProp>
                <stringProp name="Argument.value">${Token}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="GameId" elementType="Argument">
                <stringProp name="Argument.name">GameId</stringProp>
                <stringProp name="Argument.value">S3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TermCode" elementType="Argument">
                <stringProp name="Argument.name">TermCode</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryPrize</stringProp>
        </JavaSampler>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="查询彩票信息" enabled="true">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ipAndPort" elementType="Argument">
                  <stringProp name="Argument.name">ipAndPort</stringProp>
                  <stringProp name="Argument.value">10.10.37.148:8189</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="agentSecretKey" elementType="Argument">
                  <stringProp name="Argument.name">agentSecretKey</stringProp>
                  <stringProp name="Argument.value">S734B7E634E78EBB9A467B0E</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="DES3" elementType="Argument">
                  <stringProp name="Argument.name">DES3</stringProp>
                  <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="PartnerId" elementType="Argument">
                  <stringProp name="Argument.name">PartnerId</stringProp>
                  <stringProp name="Argument.value">20001</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TimeStamp" elementType="Argument">
                  <stringProp name="Argument.name">TimeStamp</stringProp>
                  <stringProp name="Argument.value">2016-04-27 10:39:10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SerialNum" elementType="Argument">
                  <stringProp name="Argument.name">SerialNum</stringProp>
                  <stringProp name="Argument.value">2016040001113</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Version" elementType="Argument">
                  <stringProp name="Argument.name">Version</stringProp>
                  <stringProp name="Argument.value">1.0.0.0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Token" elementType="Argument">
                  <stringProp name="Argument.name">Token</stringProp>
                  <stringProp name="Argument.value">${Token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TicketCode" elementType="Argument">
                  <stringProp name="Argument.name">TicketCode</stringProp>
                  <stringProp name="Argument.value">AD2899A0A526754B9AAC</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryTicketEx</stringProp>
          </JavaSampler>
          <hashTree>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">F:\jmeter_csv\ticket.txt</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">TicketCode</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
        </hashTree>
        <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="查询新期" enabled="false">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipAndPort" elementType="Argument">
                <stringProp name="Argument.name">ipAndPort</stringProp>
                <stringProp name="Argument.value">10.10.37.148:8189</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="agentSecretKey" elementType="Argument">
                <stringProp name="Argument.name">agentSecretKey</stringProp>
                <stringProp name="Argument.value">S734B7E634E78EBB9A467B0E</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="DES3" elementType="Argument">
                <stringProp name="Argument.name">DES3</stringProp>
                <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PartnerId" elementType="Argument">
                <stringProp name="Argument.name">PartnerId</stringProp>
                <stringProp name="Argument.value">20001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TimeStamp" elementType="Argument">
                <stringProp name="Argument.name">TimeStamp</stringProp>
                <stringProp name="Argument.value">2016-10-24 15:10:10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SerialNum" elementType="Argument">
                <stringProp name="Argument.name">SerialNum</stringProp>
                <stringProp name="Argument.value">1234567</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Version" elementType="Argument">
                <stringProp name="Argument.name">Version</stringProp>
                <stringProp name="Argument.value">1.0.0.0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Token" elementType="Argument">
                <stringProp name="Argument.name">Token</stringProp>
                <stringProp name="Argument.value">${Token}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="GameId" elementType="Argument">
                <stringProp name="Argument.name">GameId</stringProp>
                <stringProp name="Argument.value">K523</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryTerm</stringProp>
        </JavaSampler>
        <hashTree/>
        <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="开奖号码查询" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ipAndPort" elementType="Argument">
                <stringProp name="Argument.name">ipAndPort</stringProp>
                <stringProp name="Argument.value">10.10.37.148:8189</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="agentSecretKey" elementType="Argument">
                <stringProp name="Argument.name">agentSecretKey</stringProp>
                <stringProp name="Argument.value">S734B7E634E78EBB9A467B0E</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="DES3" elementType="Argument">
                <stringProp name="Argument.name">DES3</stringProp>
                <stringProp name="Argument.value">zhongxinyinhang123456789</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="PartnerId" elementType="Argument">
                <stringProp name="Argument.name">PartnerId</stringProp>
                <stringProp name="Argument.value">20003</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TimeStamp" elementType="Argument">
                <stringProp name="Argument.name">TimeStamp</stringProp>
                <stringProp name="Argument.value">2016-04-27 10:39:10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SerialNum" elementType="Argument">
                <stringProp name="Argument.name">SerialNum</stringProp>
                <stringProp name="Argument.value">2016040001113</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Version" elementType="Argument">
                <stringProp name="Argument.name">Version</stringProp>
                <stringProp name="Argument.value">1.0.0.0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Token" elementType="Argument">
                <stringProp name="Argument.name">Token</stringProp>
                <stringProp name="Argument.value">3546563</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="GameId" elementType="Argument">
                <stringProp name="Argument.name">GameId</stringProp>
                <stringProp name="Argument.value">B001</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="TermCode" elementType="Argument">
                <stringProp name="Argument.name">TermCode</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">com.sinodata.forJMeter.TestJavaSampleQueryPrizeNum</stringProp>
        </JavaSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="工作台" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
